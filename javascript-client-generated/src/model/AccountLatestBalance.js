/*
 * Yodlee Core APIs
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. You can generate a client SDK for Python, Java, JavaScript, PHP, or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.envestnet.com/resources/yodlee/yodlee-api-overview/docs\">Yodlee API v1.1 - Overview</a>.<br><br>You will have to set the header before making the API call. The following headers apply to all the APIs:<ul><li>Authorization: This header holds the access token</li> <li> Api-Version: 1.1</li></ul><b>Note</b>: If there are any API-specific headers, they are mentioned explicitly in the respective API's description.
 *
 * OpenAPI spec version: 1.1.0
 * Contact: developer@yodlee.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.50
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {Money} from './Money';

/**
 * The AccountLatestBalance model module.
 * @module model/AccountLatestBalance
 * @version 1.1.0
 */
export class AccountLatestBalance {
  /**
   * Constructs a new <code>AccountLatestBalance</code>.
   * @alias module:model/AccountLatestBalance
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>AccountLatestBalance</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AccountLatestBalance} obj Optional instance to populate.
   * @return {module:model/AccountLatestBalance} The populated <code>AccountLatestBalance</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new AccountLatestBalance();
      if (data.hasOwnProperty('accountName'))
        obj.accountName = ApiClient.convertToType(data['accountName'], 'String');
      if (data.hasOwnProperty('totalBalance'))
        obj.totalBalance = Money.constructFromObject(data['totalBalance']);
      if (data.hasOwnProperty('accountType'))
        obj.accountType = ApiClient.convertToType(data['accountType'], 'String');
      if (data.hasOwnProperty('currentBalance'))
        obj.currentBalance = Money.constructFromObject(data['currentBalance']);
      if (data.hasOwnProperty('refreshStatus'))
        obj.refreshStatus = ApiClient.convertToType(data['refreshStatus'], 'String');
      if (data.hasOwnProperty('accountNumber'))
        obj.accountNumber = ApiClient.convertToType(data['accountNumber'], 'String');
      if (data.hasOwnProperty('availableBalance'))
        obj.availableBalance = Money.constructFromObject(data['availableBalance']);
      if (data.hasOwnProperty('accountId'))
        obj.accountId = ApiClient.convertToType(data['accountId'], 'Number');
      if (data.hasOwnProperty('lastUpdated'))
        obj.lastUpdated = ApiClient.convertToType(data['lastUpdated'], 'String');
      if (data.hasOwnProperty('balance'))
        obj.balance = Money.constructFromObject(data['balance']);
      if (data.hasOwnProperty('providerId'))
        obj.providerId = ApiClient.convertToType(data['providerId'], 'String');
      if (data.hasOwnProperty('providerAccountId'))
        obj.providerAccountId = ApiClient.convertToType(data['providerAccountId'], 'Number');
      if (data.hasOwnProperty('CONTAINER'))
        obj.CONTAINER = ApiClient.convertToType(data['CONTAINER'], 'String');
      if (data.hasOwnProperty('cash'))
        obj.cash = Money.constructFromObject(data['cash']);
      if (data.hasOwnProperty('providerName'))
        obj.providerName = ApiClient.convertToType(data['providerName'], 'String');
      if (data.hasOwnProperty('failedReason'))
        obj.failedReason = ApiClient.convertToType(data['failedReason'], 'String');
    }
    return obj;
  }
}

/**
 * The account name as it appears at the site.<br>(The POST accounts service response return this field as name)<br><b>Applicable containers</b>: bank, investment<br><b>Aggregated / Manual</b>: Aggregated<br><b>Endpoints</b>:<br><ul><li>GET accounts/latestBalances</li></ul>
 * @member {String} accountName
 */
AccountLatestBalance.prototype.accountName = undefined;

/**
 * @member {module:model/Money} totalBalance
 */
AccountLatestBalance.prototype.totalBalance = undefined;

/**
 * The type of account that is aggregated, i.e., savings, checking, charge, HELOC, etc. The account type is derived based on the attributes of the account. <br><b>Valid Values:</b><br><b>Aggregated Account Type</b><br><b>bank</b><ul><li>CHECKING</li><li>SAVINGS</li><li>CD</li><li>PPF</li><li>RECURRING_DEPOSIT</li><li>FSA</li><li>MONEY_MARKET</li><li>IRA</li><li>PREPAID</li></ul><b>investment (SN 1.0)</b><ul><li>BROKERAGE_MARGIN</li><li>HSA</li><li>IRA</li><li>BROKERAGE_CASH</li><li>401K</li><li>403B</li><li>TRUST</li><li>ANNUITY</li><li>SIMPLE</li><li>CUSTODIAL</li><li>BROKERAGE_CASH_OPTION</li><li>BROKERAGE_MARGIN_OPTION</li><li>INDIVIDUAL</li><li>CORPORATE</li><li>JTTIC</li><li>JTWROS</li><li>COMMUNITY_PROPERTY</li><li>JOINT_BY_ENTIRETY</li><li>CONSERVATORSHIP</li><li>ROTH</li><li>ROTH_CONVERSION</li><li>ROLLOVER</li><li>EDUCATIONAL</li><li>529_PLAN</li><li>457_DEFERRED_COMPENSATION</li><li>401A</li><li>PSP</li><li>MPP</li><li>STOCK_BASKET</li><li>LIVING_TRUST</li><li>REVOCABLE_TRUST</li><li>IRREVOCABLE_TRUST</li><li>CHARITABLE_REMAINDER</li><li>CHARITABLE_LEAD</li><li>CHARITABLE_GIFT_ACCOUNT</li><li>SEP</li><li>UTMA</li><li>UGMA</li><li>ESOPP</li><li>ADMINISTRATOR</li><li>EXECUTOR</li><li>PARTNERSHIP</li><li>SOLE_PROPRIETORSHIP</li><li>CHURCH</li><li>INVESTMENT_CLUB</li><li>RESTRICTED_STOCK_AWARD</li><li>CMA</li><li>EMPLOYEE_STOCK_PURCHASE_PLAN</li><li>PERFORMANCE_PLAN</li><li>BROKERAGE_LINK_ACCOUNT</li><li>MONEY_MARKET</li><li>SUPER_ANNUATION</li><li>REGISTERED_RETIREMENT_SAVINGS_PLAN</li><li>SPOUSAL_RETIREMENT_SAVINGS_PLAN</li><li>DEFERRED_PROFIT_SHARING_PLAN</li><li>NON_REGISTERED_SAVINGS_PLAN</li><li>REGISTERED_EDUCATION_SAVINGS_PLAN</li><li>GROUP_RETIREMENT_SAVINGS_PLAN</li><li>LOCKED_IN_RETIREMENT_SAVINGS_PLAN</li><li>RESTRICTED_LOCKED_IN_SAVINGS_PLAN</li><li>LOCKED_IN_RETIREMENT_ACCOUNT</li><li>REGISTERED_PENSION_PLAN</li><li>TAX_FREE_SAVINGS_ACCOUNT</li><li>LIFE_INCOME_FUND</li><li>REGISTERED_RETIREMENT_INCOME_FUND</li><li>SPOUSAL_RETIREMENT_INCOME_FUND</li><li>LOCKED_IN_REGISTERED_INVESTMENT_FUND</li><li>PRESCRIBED_REGISTERED_RETIREMENT_INCOME_FUND</li><li>GUARANTEED_INVESTMENT_CERTIFICATES</li><li>REGISTERED_DISABILITY_SAVINGS_PLAN</li><li>DIGITAL_WALLET</li><li>OTHER</li></ul><b>investment (SN 2.0)</b><ul><li>BROKERAGE_CASH</li><li>BROKERAGE_MARGIN</li><li>INDIVIDUAL_RETIREMENT_ACCOUNT_IRA</li><li>EMPLOYEE_RETIREMENT_ACCOUNT_401K</li><li>EMPLOYEE_RETIREMENT_SAVINGS_PLAN_403B</li><li>TRUST</li><li>ANNUITY</li><li>SIMPLE_IRA</li><li>CUSTODIAL_ACCOUNT</li><li>BROKERAGE_CASH_OPTION</li><li>BROKERAGE_MARGIN_OPTION</li><li>INDIVIDUAL</li><li>CORPORATE_INVESTMENT_ACCOUNT</li><li>JOINT_TENANTS_TENANCY_IN_COMMON_JTIC</li><li>JOINT_TENANTS_WITH_RIGHTS_OF_SURVIVORSHIP_JTWROS</li><li>JOINT_TENANTS_COMMUNITY_PROPERTY</li><li>JOINT_TENANTS_TENANTS_BY_ENTIRETY</li><li>CONSERVATOR</li><li>ROTH_IRA</li><li>ROTH_CONVERSION</li><li>ROLLOVER_IRA</li><li>EDUCATIONAL</li><li>EDUCATIONAL_SAVINGS_PLAN_529</li><li>DEFERRED_COMPENSATION_PLAN_457</li><li>MONEY_PURCHASE_RETIREMENT_PLAN_401A</li><li>PROFIT_SHARING_PLAN</li><li>MONEY_PURCHASE_PLAN</li><li>STOCK_BASKET_ACCOUNT</li><li>LIVING_TRUST</li><li>REVOCABLE_TRUST</li><li>IRREVOCABLE_TRUST</li><li>CHARITABLE_REMAINDER_TRUST</li><li>CHARITABLE_LEAD_TRUST</li><li>CHARITABLE_GIFT_ACCOUNT</li><li>SEP_IRA</li><li>UNIFORM_TRANSFER_TO_MINORS_ACT_UTMA</li><li>UNIFORM_GIFT_TO_MINORS_ACT_UGMA</li><li>EMPLOYEE_STOCK_OWNERSHIP_PLAN_ESOP</li><li>ADMINISTRATOR</li><li>EXECUTOR</li><li>PARTNERSHIP</li><li>PROPRIETORSHIP</li><li>CHURCH_ACCOUNT</li><li>INVESTMENT_CLUB</li><li>RESTRICTED_STOCK_AWARD</li><li>CASH_MANAGEMENT_ACCOUNT</li><li>EMPLOYEE_STOCK_PURCHASE_PLAN_ESPP</li><li>PERFORMANCE_PLAN</li><li>BROKERAGE_LINK_ACCOUNT</li><li>MONEY_MARKET_ACCOUNT</li><li>SUPERANNUATION</li><li>REGISTERED_RETIREMENT_SAVINGS_PLAN_RRSP</li><li>SPOUSAL_RETIREMENT_SAVINGS_PLAN_SRSP</li><li>DEFERRED_PROFIT_SHARING_PLAN_DPSP</li><li>NON_REGISTERED_SAVINGS_PLAN_NRSP</li><li>REGISTERED_EDUCATION_SAVINGS_PLAN_RESP</li><li>GROUP_RETIREMENT_SAVINGS_PLAN_GRSP</li><li>LOCKED_IN_RETIREMENT_SAVINGS_PLAN_LRSP</li><li>RESTRICTED_LOCKED_IN_SAVINGS_PLAN_RLSP</li><li>LOCKED_IN_RETIREMENT_ACCOUNT_LIRA</li><li>REGISTERED_PENSION_PLAN_RPP</li><li>TAX_FREE_SAVINGS_ACCOUNT_TFSA</li><li>LIFE_INCOME_FUND_LIF</li><li>REGISTERED_RETIREMENT_INCOME_FUND_RIF</li><li>SPOUSAL_RETIREMENT_INCOME_FUND_SRIF</li><li>LOCKED_IN_REGISTERED_INVESTMENT_FUND_LRIF</li><li>PRESCRIBED_REGISTERED_RETIREMENT_INCOME_FUND_PRIF</li><li>GUARANTEED_INVESTMENT_CERTIFICATES_GIC</li><li>REGISTERED_DISABILITY_SAVINGS_PLAN_RDSP</li><li>DEFINED_CONTRIBUTION_PLAN</li><li>DEFINED_BENEFIT_PLAN</li><li>EMPLOYEE_STOCK_OPTION_PLAN</li><li>NONQUALIFIED_DEFERRED_COMPENSATION_PLAN_409A</li><li>KEOGH_PLAN</li><li>EMPLOYEE_RETIREMENT_ACCOUNT_ROTH_401K</li><li>DEFERRED_CONTINGENT_CAPITAL_PLAN_DCCP</li><li>EMPLOYEE_BENEFIT_PLAN</li><li>EMPLOYEE_SAVINGS_PLAN</li><li>HEALTH_SAVINGS_ACCOUNT_HSA</li><li>COVERDELL_EDUCATION_SAVINGS_ACCOUNT_ESA</li><li>TESTAMENTARY_TRUST</li><li>ESTATE</li><li>GRANTOR_RETAINED_ANNUITY_TRUST_GRAT</li><li>ADVISORY_ACCOUNT</li><li>NON_PROFIT_ORGANIZATION_501C</li><li>HEALTH_REIMBURSEMENT_ARRANGEMENT_HRA</li><li>INDIVIDUAL_SAVINGS_ACCOUNT_ISA</li><li>CASH_ISA</li><li>STOCKS_AND_SHARES_ISA</li><li>INNOVATIVE_FINANCE_ISA</li><li>JUNIOR_ISA</li><li>EMPLOYEES_PROVIDENT_FUND_ORGANIZATION_EPFO</li><li>PUBLIC_PROVIDENT_FUND_PPF</li><li>EMPLOYEES_PENSION_SCHEME_EPS</li><li>NATIONAL_PENSION_SYSTEM_NPS</li><li>INDEXED_ANNUITY</li><li>ANNUITIZED_ANNUITY</li><li>VARIABLE_ANNUITY</li><li>ROTH_403B</li><li>SPOUSAL_IRA</li><li>SPOUSAL_ROTH_IRA</li><li>SARSEP_IRA</li><li>SUBSTANTIALLY_EQUAL_PERIODIC_PAYMENTS_SEPP</li><li>OFFSHORE_TRUST</li><li>IRREVOCABLE_LIFE_INSURANCE_TRUST</li><li>INTERNATIONAL_TRUST</li><li>LIFE_INTEREST_TRUST</li><li>EMPLOYEE_BENEFIT_TRUST</li><li>PRECIOUS_METAL_ACCOUNT</li><li>INVESTMENT_LOAN_ACCOUNT</li><li>GRANTOR_RETAINED_INCOME_TRUST</li><li>PENSION_PLAN</li><li>DIGITAL_WALLET</li><li>OTHER</li></ul><ul><li>GET accounts/latestBalances</li></ul>
 * @member {String} accountType
 */
AccountLatestBalance.prototype.accountType = undefined;

/**
 * @member {module:model/Money} currentBalance
 */
AccountLatestBalance.prototype.currentBalance = undefined;

/**
 * Allowed values for the <code>refreshStatus</code> property.
 * @enum {String}
 * @readonly
 */
AccountLatestBalance.RefreshStatusEnum = {
  /**
   * value: "SUCCESS"
   * @const
   */
  SUCCESS: "SUCCESS",

  /**
   * value: "IN_PROGRESS"
   * @const
   */
  IN_PROGRESS: "IN_PROGRESS",

  /**
   * value: "FAILED"
   * @const
   */
  FAILED: "FAILED"
};
/**
 * The status of the account balance refresh request.
 * @member {module:model/AccountLatestBalance.RefreshStatusEnum} refreshStatus
 */
AccountLatestBalance.prototype.refreshStatus = undefined;

/**
 * The account number as it appears on the site. (The POST accounts service response return this field as number)<br><b>Additional Details</b>:<b> Bank / Investment</b>:<br> The account number for the bank account as it appears at the site.<br>In most cases, the site does not display the full account number in the account summary page and additional navigation is required to aggregate it.<br><b>Applicable containers</b>: bank, investment<br><b>Aggregated / Manual</b>: Aggregated<br><b>Endpoints</b>:<br><ul><li>GET accounts/latestBalances</li></ul>
 * @member {String} accountNumber
 */
AccountLatestBalance.prototype.accountNumber = undefined;

/**
 * @member {module:model/Money} availableBalance
 */
AccountLatestBalance.prototype.availableBalance = undefined;

/**
 * The primary key of the provider account resource.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: bank, investment<br><b>Endpoints</b>:<ul><li>GET accounts/latestBalances</li></ul>
 * @member {Number} accountId
 */
AccountLatestBalance.prototype.accountId = undefined;

/**
 * The date time the account information was last retrieved from the provider site and updated in the Yodlee system.<br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: bank, investment<br><b>Endpoints</b>:<ul><li>GET accounts/latestBalances</li></ul>
 * @member {String} lastUpdated
 */
AccountLatestBalance.prototype.lastUpdated = undefined;

/**
 * @member {module:model/Money} balance
 */
AccountLatestBalance.prototype.balance = undefined;

/**
 * Identifier of the provider site. The primary key of provider resource. <br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: bank, investment<br><b>Endpoints</b>:<ul><li>GET accounts/latestBalances</li></ul>
 * @member {String} providerId
 */
AccountLatestBalance.prototype.providerId = undefined;

/**
 * The primary key of the provider account resource.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: bank, investment<br><b>Endpoints</b>:<ul><li>GET accounts/latestBalances</li></ul>
 * @member {Number} providerAccountId
 */
AccountLatestBalance.prototype.providerAccountId = undefined;

/**
 * Allowed values for the <code>CONTAINER</code> property.
 * @enum {String}
 * @readonly
 */
AccountLatestBalance.CONTAINEREnum = {
  /**
   * value: "bank"
   * @const
   */
  bank: "bank",

  /**
   * value: "investment"
   * @const
   */
  investment: "investment"
};
/**
 * The type of service. E.g., Bank, Investment <br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: bank, investment<br><b>Endpoints</b>:<ul><li>GET accounts/latestBalances</li></ul><b>Applicable Values</b><br>
 * @member {module:model/AccountLatestBalance.CONTAINEREnum} CONTAINER
 */
AccountLatestBalance.prototype.CONTAINER = undefined;

/**
 * @member {module:model/Money} cash
 */
AccountLatestBalance.prototype.cash = undefined;

/**
 * Service provider or institution name where the account originates. This belongs to the provider resource.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Applicable containers</b>: bank, investment<br><b>Endpoints</b>:<ul><li>GET accounts/latestBalances</li></ul>
 * @member {String} providerName
 */
AccountLatestBalance.prototype.providerName = undefined;

/**
 * Allowed values for the <code>failedReason</code> property.
 * @enum {String}
 * @readonly
 */
AccountLatestBalance.FailedReasonEnum = {
  /**
   * value: "REQUIRED_DATA_NOT_AVAILABLE"
   * @const
   */
  REQUIRED_DATA_NOT_AVAILABLE: "REQUIRED_DATA_NOT_AVAILABLE",

  /**
   * value: "USER_INPUT_REQUIRED"
   * @const
   */
  USER_INPUT_REQUIRED: "USER_INPUT_REQUIRED",

  /**
   * value: "CREDENTIALS_UPDATE_NEEDED"
   * @const
   */
  CREDENTIALS_UPDATE_NEEDED: "CREDENTIALS_UPDATE_NEEDED",

  /**
   * value: "INCORRECT_CREDENTIALS"
   * @const
   */
  INCORRECT_CREDENTIALS: "INCORRECT_CREDENTIALS",

  /**
   * value: "USER_ACTION_NEEDED_AT_SITE"
   * @const
   */
  USER_ACTION_NEEDED_AT_SITE: "USER_ACTION_NEEDED_AT_SITE",

  /**
   * value: "ADDL_AUTHENTICATION_REQUIRED"
   * @const
   */
  ADDL_AUTHENTICATION_REQUIRED: "ADDL_AUTHENTICATION_REQUIRED",

  /**
   * value: "INVALID_ADDL_INFO_PROVIDED"
   * @const
   */
  INVALID_ADDL_INFO_PROVIDED: "INVALID_ADDL_INFO_PROVIDED",

  /**
   * value: "ACCOUNT_LOCKED"
   * @const
   */
  ACCOUNT_LOCKED: "ACCOUNT_LOCKED",

  /**
   * value: "SITE_NOT_SUPPORTED"
   * @const
   */
  SITE_NOT_SUPPORTED: "SITE_NOT_SUPPORTED",

  /**
   * value: "SITE_BLOCKING_ERROR"
   * @const
   */
  SITE_BLOCKING_ERROR: "SITE_BLOCKING_ERROR",

  /**
   * value: "TECH_ERROR"
   * @const
   */
  TECH_ERROR: "TECH_ERROR",

  /**
   * value: "UNEXPECTED_SITE_ERROR"
   * @const
   */
  UNEXPECTED_SITE_ERROR: "UNEXPECTED_SITE_ERROR",

  /**
   * value: "SITE_UNAVAILABLE"
   * @const
   */
  SITE_UNAVAILABLE: "SITE_UNAVAILABLE",

  /**
   * value: "SITE_SESSION_INVALIDATED"
   * @const
   */
  SITE_SESSION_INVALIDATED: "SITE_SESSION_INVALIDATED",

  /**
   * value: "REQUEST_TIME_OUT"
   * @const
   */
  REQUEST_TIME_OUT: "REQUEST_TIME_OUT",

  /**
   * value: "CONSENT_EXPIRED"
   * @const
   */
  CONSENT_EXPIRED: "CONSENT_EXPIRED",

  /**
   * value: "CONSENT_REVOKED"
   * @const
   */
  CONSENT_REVOKED: "CONSENT_REVOKED",

  /**
   * value: "INCORRECT_OAUTH_TOKEN"
   * @const
   */
  INCORRECT_OAUTH_TOKEN: "INCORRECT_OAUTH_TOKEN",

  /**
   * value: "CONSENT_REQUIRED"
   * @const
   */
  CONSENT_REQUIRED: "CONSENT_REQUIRED",

  /**
   * value: "NEW_AUTHENTICATION_REQUIRED"
   * @const
   */
  NEW_AUTHENTICATION_REQUIRED: "NEW_AUTHENTICATION_REQUIRED"
};
/**
 * The reason the account balance refresh failed.
 * @member {module:model/AccountLatestBalance.FailedReasonEnum} failedReason
 */
AccountLatestBalance.prototype.failedReason = undefined;

