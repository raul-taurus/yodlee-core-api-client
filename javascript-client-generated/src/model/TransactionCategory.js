/*
 * Yodlee Core APIs
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. You can generate a client SDK for Python, Java, JavaScript, PHP, or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.envestnet.com/resources/yodlee/yodlee-api-overview/docs\">Yodlee API v1.1 - Overview</a>.<br><br>You will have to set the header before making the API call. The following headers apply to all the APIs:<ul><li>Authorization: This header holds the access token</li> <li> Api-Version: 1.1</li></ul><b>Note</b>: If there are any API-specific headers, they are mentioned explicitly in the respective API's description.
 *
 * OpenAPI spec version: 1.1.0
 * Contact: developer@yodlee.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.50
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {DetailCategory} from './DetailCategory';

/**
 * The TransactionCategory model module.
 * @module model/TransactionCategory
 * @version 1.1.0
 */
export class TransactionCategory {
  /**
   * Constructs a new <code>TransactionCategory</code>.
   * @alias module:model/TransactionCategory
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>TransactionCategory</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TransactionCategory} obj Optional instance to populate.
   * @return {module:model/TransactionCategory} The populated <code>TransactionCategory</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new TransactionCategory();
      if (data.hasOwnProperty('highLevelCategoryName'))
        obj.highLevelCategoryName = ApiClient.convertToType(data['highLevelCategoryName'], 'String');
      if (data.hasOwnProperty('defaultHighLevelCategoryName'))
        obj.defaultHighLevelCategoryName = ApiClient.convertToType(data['defaultHighLevelCategoryName'], 'String');
      if (data.hasOwnProperty('highLevelCategoryId'))
        obj.highLevelCategoryId = ApiClient.convertToType(data['highLevelCategoryId'], 'Number');
      if (data.hasOwnProperty('detailCategory'))
        obj.detailCategory = ApiClient.convertToType(data['detailCategory'], [DetailCategory]);
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('source'))
        obj.source = ApiClient.convertToType(data['source'], 'String');
      if (data.hasOwnProperty('category'))
        obj.category = ApiClient.convertToType(data['category'], 'String');
      if (data.hasOwnProperty('classification'))
        obj.classification = ApiClient.convertToType(data['classification'], 'String');
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
      if (data.hasOwnProperty('defaultCategoryName'))
        obj.defaultCategoryName = ApiClient.convertToType(data['defaultCategoryName'], 'String');
    }
    return obj;
  }
}

/**
 * The name of the high level category. A group of similar transaction categories are clubbed together to form a high-level category.<br><br><b>Applicable containers</b>: creditCard, investment, insurance, loan<br>
 * @member {String} highLevelCategoryName
 */
TransactionCategory.prototype.highLevelCategoryName = undefined;

/**
 * A attribute which will always hold the first value(initial name) of Yodlee defined highLevelCategoryName attribute.<br><br><b>Applicable containers</b>: creditCard, investment, insurance, loan<br>
 * @member {String} defaultHighLevelCategoryName
 */
TransactionCategory.prototype.defaultHighLevelCategoryName = undefined;

/**
 * The unique identifier of the high level category.<br><br><b>Applicable containers</b>: creditCard, investment, insurance, loan<br>
 * @member {Number} highLevelCategoryId
 */
TransactionCategory.prototype.highLevelCategoryId = undefined;

/**
 * Entity that provides detail category attributes<br><br><b>Applicable containers</b>: creditCard, investment, insurance, loan<br>
 * @member {Array.<module:model/DetailCategory>} detailCategory
 */
TransactionCategory.prototype.detailCategory = undefined;

/**
 * Unique identifier of the category.<br><br><b>Applicable containers</b>: creditCard, investment, insurance, loan<br>
 * @member {Number} id
 */
TransactionCategory.prototype.id = undefined;

/**
 * Allowed values for the <code>source</code> property.
 * @enum {String}
 * @readonly
 */
TransactionCategory.SourceEnum = {
  /**
   * value: "SYSTEM"
   * @const
   */
  SYSTEM: "SYSTEM",

  /**
   * value: "USER"
   * @const
   */
  USER: "USER"
};
/**
 * Source used to identify whether the transaction category is user defined category or system created category.<br><br><b>Applicable containers</b>: creditCard, investment, insurance, loan<br><b>Applicable Values</b><br>
 * @member {module:model/TransactionCategory.SourceEnum} source
 */
TransactionCategory.prototype.source = undefined;

/**
 * The name of the category.<br><b>Note</b>: Transaction categorization is one of the core features offered by Yodlee and the categories are assigned to the transactions by the system. Transactions can be clubbed together by the category that is assigned to them.  <br><br><b>Applicable containers</b>: creditCard, investment, insurance, loan<br>
 * @member {String} category
 */
TransactionCategory.prototype.category = undefined;

/**
 * Allowed values for the <code>classification</code> property.
 * @enum {String}
 * @readonly
 */
TransactionCategory.ClassificationEnum = {
  /**
   * value: "PERSONAL"
   * @const
   */
  PERSONAL: "PERSONAL",

  /**
   * value: "BUSINESS"
   * @const
   */
  BUSINESS: "BUSINESS"
};
/**
 * Category Classification.<br><br><b>Applicable containers</b>: creditCard, investment, insurance, loan<br><b>Applicable Values</b><br>
 * @member {module:model/TransactionCategory.ClassificationEnum} classification
 */
TransactionCategory.prototype.classification = undefined;

/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
TransactionCategory.TypeEnum = {
  /**
   * value: "TRANSFER"
   * @const
   */
  TRANSFER: "TRANSFER",

  /**
   * value: "DEFERRED_COMPENSATION"
   * @const
   */
  DEFERRED_COMPENSATION: "DEFERRED_COMPENSATION",

  /**
   * value: "UNCATEGORIZE"
   * @const
   */
  UNCATEGORIZE: "UNCATEGORIZE",

  /**
   * value: "INCOME"
   * @const
   */
  INCOME: "INCOME",

  /**
   * value: "EXPENSE"
   * @const
   */
  EXPENSE: "EXPENSE"
};
/**
 * Transaction categories and high-level categories are further mapped to five transaction category types. Customers, based on their needs can either use the transaction categories, the high-level categories, or the transaction category types. <br><br><b>Applicable containers</b>: creditCard, investment, insurance, loan<br><b>Applicable Values</b><br>
 * @member {module:model/TransactionCategory.TypeEnum} type
 */
TransactionCategory.prototype.type = undefined;

/**
 * A attribute which will always hold the first value(initial name) of Yodlee defined category attribute.<br><br><b>Applicable containers</b>: creditCard, investment, insurance, loan<br>
 * @member {String} defaultCategoryName
 */
TransactionCategory.prototype.defaultCategoryName = undefined;

