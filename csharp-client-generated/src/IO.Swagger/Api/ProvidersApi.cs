/* 
 * Yodlee Core APIs
 *
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. You can generate a client SDK for Python, Java, JavaScript, PHP, or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.envestnet.com/resources/yodlee/yodlee-api-overview/docs\">Yodlee API v1.1 - Overview</a>.<br><br>You will have to set the header before making the API call. The following headers apply to all the APIs:<ul><li>Authorization: This header holds the access token</li> <li> Api-Version: 1.1</li></ul><b>Note</b>: If there are any API-specific headers, they are mentioned explicitly in the respective API's description.
 *
 * OpenAPI spec version: 1.1.0
 * Contact: developer@yodlee.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using RestSharp;
using IO.Swagger.Client;
using IO.Swagger.Model;

namespace IO.Swagger.Api
{
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
        public interface IProvidersApi : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Get Providers
        /// </summary>
        /// <remarks>
        /// &lt;i&gt;This API implementation notes is intended for FastLink 4 users. For FastLink 3 users, additional integration notes related to this endpoint is available &lt;a href&#x3D;\&quot;https://developer.envestnet.com/resources/yodlee/fastlink-3/docs/api-integrations\&quot;&gt;here&lt;/a&gt;.&lt;/i&gt;&lt;br&gt;&lt;br&gt;The get provider service is used to get all the providers that are enabled, search a provider service by name or routing number and get popular sites of a region.&lt;br&gt;&lt;br&gt;Searching for a provider using a routing number is applicable only to the USA and Canada regions.&lt;br&gt; The valid values for priority are: &lt;br&gt;&lt;ol&gt;&lt;li&gt; cobrand: Returns providers enabled for the cobrand (Default priority)&lt;/li&gt;&lt;li&gt;popular: Returns providers popular among users of the customer.&lt;/li&gt;&lt;/ol&gt;&lt;br&gt;The skip and top parameters are used for pagination. In the skip and top parameters, pass the number of records to be skipped and retrieved, respectively.The response header provides the links to retrieve the next and previous set of transactions.&lt;br&gt;&lt;br&gt; Providers accept the configName as the input to the API and return the providers list based on the configurations of each configName.  For verification, the providers will accept the configName with which has the verification product and the attributes that are chosen in the configName which returns the list of providers that match the criteria.  ***For an example,  /ysl/providers?configName&#x3D;aggregationAndVerification*** &lt;br&gt;&lt;br&gt;Note:&lt;/b&gt; &lt;ol&gt;&lt;li&gt;In a product flow involving user interaction, Yodlee recommends invoking this service with filters.&lt;li&gt;Without filters, the service may perform slowly as it takes a few minutes to return data in the response.&lt;li&gt;The AuthParameter appears in the response only in case of token-based aggregation sites.&lt;li&gt;The pagination feature only applies when the priority parameter is set as cobrand. If no values are provided in the skip and top parameters, the API will only return the first 500 records.&lt;li&gt;This service supports the localization feature and accepts locale as a header parameter.&lt;li&gt;The capability has been deprecated in query parameter and response. &lt;/li&gt;&lt;/ol&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="capability">CHALLENGE_DEPOSIT_VERIFICATION - capability search is deprecated (optional)</param>
        /// <param name="institutionId">Institution Id for Single site selection (optional)</param>
        /// <param name="name">Name in minimum 1 character or routing number. (optional)</param>
        /// <param name="priority">Search priority (optional)</param>
        /// <param name="providerId">Max 5 Comma seperated Provider Ids (optional)</param>
        /// <param name="skip">skip (Min 0) - This is not applicable along with &#x27;name&#x27; parameter. (optional)</param>
        /// <param name="top">top (Max 500) - This is not applicable along with &#x27;name&#x27; parameter. (optional)</param>
        /// <returns>ProviderResponse</returns>
        ProviderResponse GetAllProviders (string capability = null, long? institutionId = null, string name = null, string priority = null, string providerId = null, int? skip = null, int? top = null);

        /// <summary>
        /// Get Providers
        /// </summary>
        /// <remarks>
        /// &lt;i&gt;This API implementation notes is intended for FastLink 4 users. For FastLink 3 users, additional integration notes related to this endpoint is available &lt;a href&#x3D;\&quot;https://developer.envestnet.com/resources/yodlee/fastlink-3/docs/api-integrations\&quot;&gt;here&lt;/a&gt;.&lt;/i&gt;&lt;br&gt;&lt;br&gt;The get provider service is used to get all the providers that are enabled, search a provider service by name or routing number and get popular sites of a region.&lt;br&gt;&lt;br&gt;Searching for a provider using a routing number is applicable only to the USA and Canada regions.&lt;br&gt; The valid values for priority are: &lt;br&gt;&lt;ol&gt;&lt;li&gt; cobrand: Returns providers enabled for the cobrand (Default priority)&lt;/li&gt;&lt;li&gt;popular: Returns providers popular among users of the customer.&lt;/li&gt;&lt;/ol&gt;&lt;br&gt;The skip and top parameters are used for pagination. In the skip and top parameters, pass the number of records to be skipped and retrieved, respectively.The response header provides the links to retrieve the next and previous set of transactions.&lt;br&gt;&lt;br&gt; Providers accept the configName as the input to the API and return the providers list based on the configurations of each configName.  For verification, the providers will accept the configName with which has the verification product and the attributes that are chosen in the configName which returns the list of providers that match the criteria.  ***For an example,  /ysl/providers?configName&#x3D;aggregationAndVerification*** &lt;br&gt;&lt;br&gt;Note:&lt;/b&gt; &lt;ol&gt;&lt;li&gt;In a product flow involving user interaction, Yodlee recommends invoking this service with filters.&lt;li&gt;Without filters, the service may perform slowly as it takes a few minutes to return data in the response.&lt;li&gt;The AuthParameter appears in the response only in case of token-based aggregation sites.&lt;li&gt;The pagination feature only applies when the priority parameter is set as cobrand. If no values are provided in the skip and top parameters, the API will only return the first 500 records.&lt;li&gt;This service supports the localization feature and accepts locale as a header parameter.&lt;li&gt;The capability has been deprecated in query parameter and response. &lt;/li&gt;&lt;/ol&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="capability">CHALLENGE_DEPOSIT_VERIFICATION - capability search is deprecated (optional)</param>
        /// <param name="institutionId">Institution Id for Single site selection (optional)</param>
        /// <param name="name">Name in minimum 1 character or routing number. (optional)</param>
        /// <param name="priority">Search priority (optional)</param>
        /// <param name="providerId">Max 5 Comma seperated Provider Ids (optional)</param>
        /// <param name="skip">skip (Min 0) - This is not applicable along with &#x27;name&#x27; parameter. (optional)</param>
        /// <param name="top">top (Max 500) - This is not applicable along with &#x27;name&#x27; parameter. (optional)</param>
        /// <returns>ApiResponse of ProviderResponse</returns>
        ApiResponse<ProviderResponse> GetAllProvidersWithHttpInfo (string capability = null, long? institutionId = null, string name = null, string priority = null, string providerId = null, int? skip = null, int? top = null);
        /// <summary>
        /// Get Provider Details
        /// </summary>
        /// <remarks>
        /// The get provider detail service is used to get detailed information including the login form for a provider.&lt;br&gt;The response is a provider object that includes information such as name of the provider, &lt;br&gt;provider&#x27;s base URL, a list of containers supported by the provider, the login form details of the provider, etc.&lt;br&gt;Only enabled datasets, attributes and containers gets returned in the response.&lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;li&gt;This service supports the localization feature and accepts locale as a header parameter.&lt;li&gt;The capability has been deprecated in the response.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerId">providerId</param>
        /// <returns>ProviderDetailResponse</returns>
        ProviderDetailResponse GetProvider (long? providerId);

        /// <summary>
        /// Get Provider Details
        /// </summary>
        /// <remarks>
        /// The get provider detail service is used to get detailed information including the login form for a provider.&lt;br&gt;The response is a provider object that includes information such as name of the provider, &lt;br&gt;provider&#x27;s base URL, a list of containers supported by the provider, the login form details of the provider, etc.&lt;br&gt;Only enabled datasets, attributes and containers gets returned in the response.&lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;li&gt;This service supports the localization feature and accepts locale as a header parameter.&lt;li&gt;The capability has been deprecated in the response.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerId">providerId</param>
        /// <returns>ApiResponse of ProviderDetailResponse</returns>
        ApiResponse<ProviderDetailResponse> GetProviderWithHttpInfo (long? providerId);
        /// <summary>
        /// Get Providers Count
        /// </summary>
        /// <remarks>
        /// &lt;i&gt;This API implementation notes is intended for FastLink 4 users. For FastLink 3 users, additional integration notes related to this endpoint is available &lt;a href&#x3D;\&quot;https://developer.envestnet.com/resources/yodlee/fastlink-3/docs/api-integrations\&quot;&gt;here&lt;/a&gt;.&lt;/i&gt;&lt;br&gt;&lt;br&gt;The count service provides the total number of providers that get returned in the GET /providers depending on the input parameters passed.&lt;br&gt;If you are implementing pagination for providers, call this endpoint before calling GET /providers to know the number of providers that are returned for the input parameters passed.&lt;br&gt;The functionality of the input parameters remains the same as that of the GET /providers endpoint&lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt; &lt;li&gt;The capability has been deprecated in the query parameter.&lt;/li&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="capability">CHALLENGE_DEPOSIT_VERIFICATION - capability search is deprecated (optional)</param>
        /// <param name="name">Name in minimum 1 character or routing number. (optional)</param>
        /// <param name="priority">Search priority (optional)</param>
        /// <returns>ProvidersCountResponse</returns>
        ProvidersCountResponse GetProvidersCount (string capability = null, string name = null, string priority = null);

        /// <summary>
        /// Get Providers Count
        /// </summary>
        /// <remarks>
        /// &lt;i&gt;This API implementation notes is intended for FastLink 4 users. For FastLink 3 users, additional integration notes related to this endpoint is available &lt;a href&#x3D;\&quot;https://developer.envestnet.com/resources/yodlee/fastlink-3/docs/api-integrations\&quot;&gt;here&lt;/a&gt;.&lt;/i&gt;&lt;br&gt;&lt;br&gt;The count service provides the total number of providers that get returned in the GET /providers depending on the input parameters passed.&lt;br&gt;If you are implementing pagination for providers, call this endpoint before calling GET /providers to know the number of providers that are returned for the input parameters passed.&lt;br&gt;The functionality of the input parameters remains the same as that of the GET /providers endpoint&lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt; &lt;li&gt;The capability has been deprecated in the query parameter.&lt;/li&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="capability">CHALLENGE_DEPOSIT_VERIFICATION - capability search is deprecated (optional)</param>
        /// <param name="name">Name in minimum 1 character or routing number. (optional)</param>
        /// <param name="priority">Search priority (optional)</param>
        /// <returns>ApiResponse of ProvidersCountResponse</returns>
        ApiResponse<ProvidersCountResponse> GetProvidersCountWithHttpInfo (string capability = null, string name = null, string priority = null);
        #endregion Synchronous Operations
        #region Asynchronous Operations
        /// <summary>
        /// Get Providers
        /// </summary>
        /// <remarks>
        /// &lt;i&gt;This API implementation notes is intended for FastLink 4 users. For FastLink 3 users, additional integration notes related to this endpoint is available &lt;a href&#x3D;\&quot;https://developer.envestnet.com/resources/yodlee/fastlink-3/docs/api-integrations\&quot;&gt;here&lt;/a&gt;.&lt;/i&gt;&lt;br&gt;&lt;br&gt;The get provider service is used to get all the providers that are enabled, search a provider service by name or routing number and get popular sites of a region.&lt;br&gt;&lt;br&gt;Searching for a provider using a routing number is applicable only to the USA and Canada regions.&lt;br&gt; The valid values for priority are: &lt;br&gt;&lt;ol&gt;&lt;li&gt; cobrand: Returns providers enabled for the cobrand (Default priority)&lt;/li&gt;&lt;li&gt;popular: Returns providers popular among users of the customer.&lt;/li&gt;&lt;/ol&gt;&lt;br&gt;The skip and top parameters are used for pagination. In the skip and top parameters, pass the number of records to be skipped and retrieved, respectively.The response header provides the links to retrieve the next and previous set of transactions.&lt;br&gt;&lt;br&gt; Providers accept the configName as the input to the API and return the providers list based on the configurations of each configName.  For verification, the providers will accept the configName with which has the verification product and the attributes that are chosen in the configName which returns the list of providers that match the criteria.  ***For an example,  /ysl/providers?configName&#x3D;aggregationAndVerification*** &lt;br&gt;&lt;br&gt;Note:&lt;/b&gt; &lt;ol&gt;&lt;li&gt;In a product flow involving user interaction, Yodlee recommends invoking this service with filters.&lt;li&gt;Without filters, the service may perform slowly as it takes a few minutes to return data in the response.&lt;li&gt;The AuthParameter appears in the response only in case of token-based aggregation sites.&lt;li&gt;The pagination feature only applies when the priority parameter is set as cobrand. If no values are provided in the skip and top parameters, the API will only return the first 500 records.&lt;li&gt;This service supports the localization feature and accepts locale as a header parameter.&lt;li&gt;The capability has been deprecated in query parameter and response. &lt;/li&gt;&lt;/ol&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="capability">CHALLENGE_DEPOSIT_VERIFICATION - capability search is deprecated (optional)</param>
        /// <param name="institutionId">Institution Id for Single site selection (optional)</param>
        /// <param name="name">Name in minimum 1 character or routing number. (optional)</param>
        /// <param name="priority">Search priority (optional)</param>
        /// <param name="providerId">Max 5 Comma seperated Provider Ids (optional)</param>
        /// <param name="skip">skip (Min 0) - This is not applicable along with &#x27;name&#x27; parameter. (optional)</param>
        /// <param name="top">top (Max 500) - This is not applicable along with &#x27;name&#x27; parameter. (optional)</param>
        /// <returns>Task of ProviderResponse</returns>
        System.Threading.Tasks.Task<ProviderResponse> GetAllProvidersAsync (string capability = null, long? institutionId = null, string name = null, string priority = null, string providerId = null, int? skip = null, int? top = null);

        /// <summary>
        /// Get Providers
        /// </summary>
        /// <remarks>
        /// &lt;i&gt;This API implementation notes is intended for FastLink 4 users. For FastLink 3 users, additional integration notes related to this endpoint is available &lt;a href&#x3D;\&quot;https://developer.envestnet.com/resources/yodlee/fastlink-3/docs/api-integrations\&quot;&gt;here&lt;/a&gt;.&lt;/i&gt;&lt;br&gt;&lt;br&gt;The get provider service is used to get all the providers that are enabled, search a provider service by name or routing number and get popular sites of a region.&lt;br&gt;&lt;br&gt;Searching for a provider using a routing number is applicable only to the USA and Canada regions.&lt;br&gt; The valid values for priority are: &lt;br&gt;&lt;ol&gt;&lt;li&gt; cobrand: Returns providers enabled for the cobrand (Default priority)&lt;/li&gt;&lt;li&gt;popular: Returns providers popular among users of the customer.&lt;/li&gt;&lt;/ol&gt;&lt;br&gt;The skip and top parameters are used for pagination. In the skip and top parameters, pass the number of records to be skipped and retrieved, respectively.The response header provides the links to retrieve the next and previous set of transactions.&lt;br&gt;&lt;br&gt; Providers accept the configName as the input to the API and return the providers list based on the configurations of each configName.  For verification, the providers will accept the configName with which has the verification product and the attributes that are chosen in the configName which returns the list of providers that match the criteria.  ***For an example,  /ysl/providers?configName&#x3D;aggregationAndVerification*** &lt;br&gt;&lt;br&gt;Note:&lt;/b&gt; &lt;ol&gt;&lt;li&gt;In a product flow involving user interaction, Yodlee recommends invoking this service with filters.&lt;li&gt;Without filters, the service may perform slowly as it takes a few minutes to return data in the response.&lt;li&gt;The AuthParameter appears in the response only in case of token-based aggregation sites.&lt;li&gt;The pagination feature only applies when the priority parameter is set as cobrand. If no values are provided in the skip and top parameters, the API will only return the first 500 records.&lt;li&gt;This service supports the localization feature and accepts locale as a header parameter.&lt;li&gt;The capability has been deprecated in query parameter and response. &lt;/li&gt;&lt;/ol&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="capability">CHALLENGE_DEPOSIT_VERIFICATION - capability search is deprecated (optional)</param>
        /// <param name="institutionId">Institution Id for Single site selection (optional)</param>
        /// <param name="name">Name in minimum 1 character or routing number. (optional)</param>
        /// <param name="priority">Search priority (optional)</param>
        /// <param name="providerId">Max 5 Comma seperated Provider Ids (optional)</param>
        /// <param name="skip">skip (Min 0) - This is not applicable along with &#x27;name&#x27; parameter. (optional)</param>
        /// <param name="top">top (Max 500) - This is not applicable along with &#x27;name&#x27; parameter. (optional)</param>
        /// <returns>Task of ApiResponse (ProviderResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<ProviderResponse>> GetAllProvidersAsyncWithHttpInfo (string capability = null, long? institutionId = null, string name = null, string priority = null, string providerId = null, int? skip = null, int? top = null);
        /// <summary>
        /// Get Provider Details
        /// </summary>
        /// <remarks>
        /// The get provider detail service is used to get detailed information including the login form for a provider.&lt;br&gt;The response is a provider object that includes information such as name of the provider, &lt;br&gt;provider&#x27;s base URL, a list of containers supported by the provider, the login form details of the provider, etc.&lt;br&gt;Only enabled datasets, attributes and containers gets returned in the response.&lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;li&gt;This service supports the localization feature and accepts locale as a header parameter.&lt;li&gt;The capability has been deprecated in the response.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerId">providerId</param>
        /// <returns>Task of ProviderDetailResponse</returns>
        System.Threading.Tasks.Task<ProviderDetailResponse> GetProviderAsync (long? providerId);

        /// <summary>
        /// Get Provider Details
        /// </summary>
        /// <remarks>
        /// The get provider detail service is used to get detailed information including the login form for a provider.&lt;br&gt;The response is a provider object that includes information such as name of the provider, &lt;br&gt;provider&#x27;s base URL, a list of containers supported by the provider, the login form details of the provider, etc.&lt;br&gt;Only enabled datasets, attributes and containers gets returned in the response.&lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;li&gt;This service supports the localization feature and accepts locale as a header parameter.&lt;li&gt;The capability has been deprecated in the response.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerId">providerId</param>
        /// <returns>Task of ApiResponse (ProviderDetailResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<ProviderDetailResponse>> GetProviderAsyncWithHttpInfo (long? providerId);
        /// <summary>
        /// Get Providers Count
        /// </summary>
        /// <remarks>
        /// &lt;i&gt;This API implementation notes is intended for FastLink 4 users. For FastLink 3 users, additional integration notes related to this endpoint is available &lt;a href&#x3D;\&quot;https://developer.envestnet.com/resources/yodlee/fastlink-3/docs/api-integrations\&quot;&gt;here&lt;/a&gt;.&lt;/i&gt;&lt;br&gt;&lt;br&gt;The count service provides the total number of providers that get returned in the GET /providers depending on the input parameters passed.&lt;br&gt;If you are implementing pagination for providers, call this endpoint before calling GET /providers to know the number of providers that are returned for the input parameters passed.&lt;br&gt;The functionality of the input parameters remains the same as that of the GET /providers endpoint&lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt; &lt;li&gt;The capability has been deprecated in the query parameter.&lt;/li&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="capability">CHALLENGE_DEPOSIT_VERIFICATION - capability search is deprecated (optional)</param>
        /// <param name="name">Name in minimum 1 character or routing number. (optional)</param>
        /// <param name="priority">Search priority (optional)</param>
        /// <returns>Task of ProvidersCountResponse</returns>
        System.Threading.Tasks.Task<ProvidersCountResponse> GetProvidersCountAsync (string capability = null, string name = null, string priority = null);

        /// <summary>
        /// Get Providers Count
        /// </summary>
        /// <remarks>
        /// &lt;i&gt;This API implementation notes is intended for FastLink 4 users. For FastLink 3 users, additional integration notes related to this endpoint is available &lt;a href&#x3D;\&quot;https://developer.envestnet.com/resources/yodlee/fastlink-3/docs/api-integrations\&quot;&gt;here&lt;/a&gt;.&lt;/i&gt;&lt;br&gt;&lt;br&gt;The count service provides the total number of providers that get returned in the GET /providers depending on the input parameters passed.&lt;br&gt;If you are implementing pagination for providers, call this endpoint before calling GET /providers to know the number of providers that are returned for the input parameters passed.&lt;br&gt;The functionality of the input parameters remains the same as that of the GET /providers endpoint&lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt; &lt;li&gt;The capability has been deprecated in the query parameter.&lt;/li&gt;
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="capability">CHALLENGE_DEPOSIT_VERIFICATION - capability search is deprecated (optional)</param>
        /// <param name="name">Name in minimum 1 character or routing number. (optional)</param>
        /// <param name="priority">Search priority (optional)</param>
        /// <returns>Task of ApiResponse (ProvidersCountResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<ProvidersCountResponse>> GetProvidersCountAsyncWithHttpInfo (string capability = null, string name = null, string priority = null);
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
        public partial class ProvidersApi : IProvidersApi
    {
        private IO.Swagger.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="ProvidersApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ProvidersApi(String basePath)
        {
            this.Configuration = new IO.Swagger.Client.Configuration { BasePath = basePath };

            ExceptionFactory = IO.Swagger.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ProvidersApi"/> class
        /// </summary>
        /// <returns></returns>
        public ProvidersApi()
        {
            this.Configuration = IO.Swagger.Client.Configuration.Default;

            ExceptionFactory = IO.Swagger.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ProvidersApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public ProvidersApi(IO.Swagger.Client.Configuration configuration = null)
        {
            if (configuration == null) // use the default one in Configuration
                this.Configuration = IO.Swagger.Client.Configuration.Default;
            else
                this.Configuration = configuration;

            ExceptionFactory = IO.Swagger.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.ApiClient.RestClient.BaseUrl.ToString();
        }

        /// <summary>
        /// Sets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        [Obsolete("SetBasePath is deprecated, please do 'Configuration.ApiClient = new ApiClient(\"http://new-path\")' instead.")]
        public void SetBasePath(String basePath)
        {
            // do nothing
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public IO.Swagger.Client.Configuration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public IO.Swagger.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Gets the default header.
        /// </summary>
        /// <returns>Dictionary of HTTP header</returns>
        [Obsolete("DefaultHeader is deprecated, please use Configuration.DefaultHeader instead.")]
        public IDictionary<String, String> DefaultHeader()
        {
            return new ReadOnlyDictionary<string, string>(this.Configuration.DefaultHeader);
        }

        /// <summary>
        /// Add default header.
        /// </summary>
        /// <param name="key">Header field name.</param>
        /// <param name="value">Header field value.</param>
        /// <returns></returns>
        [Obsolete("AddDefaultHeader is deprecated, please use Configuration.AddDefaultHeader instead.")]
        public void AddDefaultHeader(string key, string value)
        {
            this.Configuration.AddDefaultHeader(key, value);
        }

        /// <summary>
        /// Get Providers &lt;i&gt;This API implementation notes is intended for FastLink 4 users. For FastLink 3 users, additional integration notes related to this endpoint is available &lt;a href&#x3D;\&quot;https://developer.envestnet.com/resources/yodlee/fastlink-3/docs/api-integrations\&quot;&gt;here&lt;/a&gt;.&lt;/i&gt;&lt;br&gt;&lt;br&gt;The get provider service is used to get all the providers that are enabled, search a provider service by name or routing number and get popular sites of a region.&lt;br&gt;&lt;br&gt;Searching for a provider using a routing number is applicable only to the USA and Canada regions.&lt;br&gt; The valid values for priority are: &lt;br&gt;&lt;ol&gt;&lt;li&gt; cobrand: Returns providers enabled for the cobrand (Default priority)&lt;/li&gt;&lt;li&gt;popular: Returns providers popular among users of the customer.&lt;/li&gt;&lt;/ol&gt;&lt;br&gt;The skip and top parameters are used for pagination. In the skip and top parameters, pass the number of records to be skipped and retrieved, respectively.The response header provides the links to retrieve the next and previous set of transactions.&lt;br&gt;&lt;br&gt; Providers accept the configName as the input to the API and return the providers list based on the configurations of each configName.  For verification, the providers will accept the configName with which has the verification product and the attributes that are chosen in the configName which returns the list of providers that match the criteria.  ***For an example,  /ysl/providers?configName&#x3D;aggregationAndVerification*** &lt;br&gt;&lt;br&gt;Note:&lt;/b&gt; &lt;ol&gt;&lt;li&gt;In a product flow involving user interaction, Yodlee recommends invoking this service with filters.&lt;li&gt;Without filters, the service may perform slowly as it takes a few minutes to return data in the response.&lt;li&gt;The AuthParameter appears in the response only in case of token-based aggregation sites.&lt;li&gt;The pagination feature only applies when the priority parameter is set as cobrand. If no values are provided in the skip and top parameters, the API will only return the first 500 records.&lt;li&gt;This service supports the localization feature and accepts locale as a header parameter.&lt;li&gt;The capability has been deprecated in query parameter and response. &lt;/li&gt;&lt;/ol&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="capability">CHALLENGE_DEPOSIT_VERIFICATION - capability search is deprecated (optional)</param>
        /// <param name="institutionId">Institution Id for Single site selection (optional)</param>
        /// <param name="name">Name in minimum 1 character or routing number. (optional)</param>
        /// <param name="priority">Search priority (optional)</param>
        /// <param name="providerId">Max 5 Comma seperated Provider Ids (optional)</param>
        /// <param name="skip">skip (Min 0) - This is not applicable along with &#x27;name&#x27; parameter. (optional)</param>
        /// <param name="top">top (Max 500) - This is not applicable along with &#x27;name&#x27; parameter. (optional)</param>
        /// <returns>ProviderResponse</returns>
        public ProviderResponse GetAllProviders (string capability = null, long? institutionId = null, string name = null, string priority = null, string providerId = null, int? skip = null, int? top = null)
        {
             ApiResponse<ProviderResponse> localVarResponse = GetAllProvidersWithHttpInfo(capability, institutionId, name, priority, providerId, skip, top);
             return localVarResponse.Data;
        }

        /// <summary>
        /// Get Providers &lt;i&gt;This API implementation notes is intended for FastLink 4 users. For FastLink 3 users, additional integration notes related to this endpoint is available &lt;a href&#x3D;\&quot;https://developer.envestnet.com/resources/yodlee/fastlink-3/docs/api-integrations\&quot;&gt;here&lt;/a&gt;.&lt;/i&gt;&lt;br&gt;&lt;br&gt;The get provider service is used to get all the providers that are enabled, search a provider service by name or routing number and get popular sites of a region.&lt;br&gt;&lt;br&gt;Searching for a provider using a routing number is applicable only to the USA and Canada regions.&lt;br&gt; The valid values for priority are: &lt;br&gt;&lt;ol&gt;&lt;li&gt; cobrand: Returns providers enabled for the cobrand (Default priority)&lt;/li&gt;&lt;li&gt;popular: Returns providers popular among users of the customer.&lt;/li&gt;&lt;/ol&gt;&lt;br&gt;The skip and top parameters are used for pagination. In the skip and top parameters, pass the number of records to be skipped and retrieved, respectively.The response header provides the links to retrieve the next and previous set of transactions.&lt;br&gt;&lt;br&gt; Providers accept the configName as the input to the API and return the providers list based on the configurations of each configName.  For verification, the providers will accept the configName with which has the verification product and the attributes that are chosen in the configName which returns the list of providers that match the criteria.  ***For an example,  /ysl/providers?configName&#x3D;aggregationAndVerification*** &lt;br&gt;&lt;br&gt;Note:&lt;/b&gt; &lt;ol&gt;&lt;li&gt;In a product flow involving user interaction, Yodlee recommends invoking this service with filters.&lt;li&gt;Without filters, the service may perform slowly as it takes a few minutes to return data in the response.&lt;li&gt;The AuthParameter appears in the response only in case of token-based aggregation sites.&lt;li&gt;The pagination feature only applies when the priority parameter is set as cobrand. If no values are provided in the skip and top parameters, the API will only return the first 500 records.&lt;li&gt;This service supports the localization feature and accepts locale as a header parameter.&lt;li&gt;The capability has been deprecated in query parameter and response. &lt;/li&gt;&lt;/ol&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="capability">CHALLENGE_DEPOSIT_VERIFICATION - capability search is deprecated (optional)</param>
        /// <param name="institutionId">Institution Id for Single site selection (optional)</param>
        /// <param name="name">Name in minimum 1 character or routing number. (optional)</param>
        /// <param name="priority">Search priority (optional)</param>
        /// <param name="providerId">Max 5 Comma seperated Provider Ids (optional)</param>
        /// <param name="skip">skip (Min 0) - This is not applicable along with &#x27;name&#x27; parameter. (optional)</param>
        /// <param name="top">top (Max 500) - This is not applicable along with &#x27;name&#x27; parameter. (optional)</param>
        /// <returns>ApiResponse of ProviderResponse</returns>
        public ApiResponse< ProviderResponse > GetAllProvidersWithHttpInfo (string capability = null, long? institutionId = null, string name = null, string priority = null, string providerId = null, int? skip = null, int? top = null)
        {

            var localVarPath = "/providers";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json;charset=UTF-8"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (capability != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "capability", capability)); // query parameter
            if (institutionId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "institutionId", institutionId)); // query parameter
            if (name != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "name", name)); // query parameter
            if (priority != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "priority", priority)); // query parameter
            if (providerId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "providerId", providerId)); // query parameter
            if (skip != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "skip", skip)); // query parameter
            if (top != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "top", top)); // query parameter

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetAllProviders", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<ProviderResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (ProviderResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(ProviderResponse)));
        }

        /// <summary>
        /// Get Providers &lt;i&gt;This API implementation notes is intended for FastLink 4 users. For FastLink 3 users, additional integration notes related to this endpoint is available &lt;a href&#x3D;\&quot;https://developer.envestnet.com/resources/yodlee/fastlink-3/docs/api-integrations\&quot;&gt;here&lt;/a&gt;.&lt;/i&gt;&lt;br&gt;&lt;br&gt;The get provider service is used to get all the providers that are enabled, search a provider service by name or routing number and get popular sites of a region.&lt;br&gt;&lt;br&gt;Searching for a provider using a routing number is applicable only to the USA and Canada regions.&lt;br&gt; The valid values for priority are: &lt;br&gt;&lt;ol&gt;&lt;li&gt; cobrand: Returns providers enabled for the cobrand (Default priority)&lt;/li&gt;&lt;li&gt;popular: Returns providers popular among users of the customer.&lt;/li&gt;&lt;/ol&gt;&lt;br&gt;The skip and top parameters are used for pagination. In the skip and top parameters, pass the number of records to be skipped and retrieved, respectively.The response header provides the links to retrieve the next and previous set of transactions.&lt;br&gt;&lt;br&gt; Providers accept the configName as the input to the API and return the providers list based on the configurations of each configName.  For verification, the providers will accept the configName with which has the verification product and the attributes that are chosen in the configName which returns the list of providers that match the criteria.  ***For an example,  /ysl/providers?configName&#x3D;aggregationAndVerification*** &lt;br&gt;&lt;br&gt;Note:&lt;/b&gt; &lt;ol&gt;&lt;li&gt;In a product flow involving user interaction, Yodlee recommends invoking this service with filters.&lt;li&gt;Without filters, the service may perform slowly as it takes a few minutes to return data in the response.&lt;li&gt;The AuthParameter appears in the response only in case of token-based aggregation sites.&lt;li&gt;The pagination feature only applies when the priority parameter is set as cobrand. If no values are provided in the skip and top parameters, the API will only return the first 500 records.&lt;li&gt;This service supports the localization feature and accepts locale as a header parameter.&lt;li&gt;The capability has been deprecated in query parameter and response. &lt;/li&gt;&lt;/ol&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="capability">CHALLENGE_DEPOSIT_VERIFICATION - capability search is deprecated (optional)</param>
        /// <param name="institutionId">Institution Id for Single site selection (optional)</param>
        /// <param name="name">Name in minimum 1 character or routing number. (optional)</param>
        /// <param name="priority">Search priority (optional)</param>
        /// <param name="providerId">Max 5 Comma seperated Provider Ids (optional)</param>
        /// <param name="skip">skip (Min 0) - This is not applicable along with &#x27;name&#x27; parameter. (optional)</param>
        /// <param name="top">top (Max 500) - This is not applicable along with &#x27;name&#x27; parameter. (optional)</param>
        /// <returns>Task of ProviderResponse</returns>
        public async System.Threading.Tasks.Task<ProviderResponse> GetAllProvidersAsync (string capability = null, long? institutionId = null, string name = null, string priority = null, string providerId = null, int? skip = null, int? top = null)
        {
             ApiResponse<ProviderResponse> localVarResponse = await GetAllProvidersAsyncWithHttpInfo(capability, institutionId, name, priority, providerId, skip, top);
             return localVarResponse.Data;

        }

        /// <summary>
        /// Get Providers &lt;i&gt;This API implementation notes is intended for FastLink 4 users. For FastLink 3 users, additional integration notes related to this endpoint is available &lt;a href&#x3D;\&quot;https://developer.envestnet.com/resources/yodlee/fastlink-3/docs/api-integrations\&quot;&gt;here&lt;/a&gt;.&lt;/i&gt;&lt;br&gt;&lt;br&gt;The get provider service is used to get all the providers that are enabled, search a provider service by name or routing number and get popular sites of a region.&lt;br&gt;&lt;br&gt;Searching for a provider using a routing number is applicable only to the USA and Canada regions.&lt;br&gt; The valid values for priority are: &lt;br&gt;&lt;ol&gt;&lt;li&gt; cobrand: Returns providers enabled for the cobrand (Default priority)&lt;/li&gt;&lt;li&gt;popular: Returns providers popular among users of the customer.&lt;/li&gt;&lt;/ol&gt;&lt;br&gt;The skip and top parameters are used for pagination. In the skip and top parameters, pass the number of records to be skipped and retrieved, respectively.The response header provides the links to retrieve the next and previous set of transactions.&lt;br&gt;&lt;br&gt; Providers accept the configName as the input to the API and return the providers list based on the configurations of each configName.  For verification, the providers will accept the configName with which has the verification product and the attributes that are chosen in the configName which returns the list of providers that match the criteria.  ***For an example,  /ysl/providers?configName&#x3D;aggregationAndVerification*** &lt;br&gt;&lt;br&gt;Note:&lt;/b&gt; &lt;ol&gt;&lt;li&gt;In a product flow involving user interaction, Yodlee recommends invoking this service with filters.&lt;li&gt;Without filters, the service may perform slowly as it takes a few minutes to return data in the response.&lt;li&gt;The AuthParameter appears in the response only in case of token-based aggregation sites.&lt;li&gt;The pagination feature only applies when the priority parameter is set as cobrand. If no values are provided in the skip and top parameters, the API will only return the first 500 records.&lt;li&gt;This service supports the localization feature and accepts locale as a header parameter.&lt;li&gt;The capability has been deprecated in query parameter and response. &lt;/li&gt;&lt;/ol&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="capability">CHALLENGE_DEPOSIT_VERIFICATION - capability search is deprecated (optional)</param>
        /// <param name="institutionId">Institution Id for Single site selection (optional)</param>
        /// <param name="name">Name in minimum 1 character or routing number. (optional)</param>
        /// <param name="priority">Search priority (optional)</param>
        /// <param name="providerId">Max 5 Comma seperated Provider Ids (optional)</param>
        /// <param name="skip">skip (Min 0) - This is not applicable along with &#x27;name&#x27; parameter. (optional)</param>
        /// <param name="top">top (Max 500) - This is not applicable along with &#x27;name&#x27; parameter. (optional)</param>
        /// <returns>Task of ApiResponse (ProviderResponse)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<ProviderResponse>> GetAllProvidersAsyncWithHttpInfo (string capability = null, long? institutionId = null, string name = null, string priority = null, string providerId = null, int? skip = null, int? top = null)
        {

            var localVarPath = "/providers";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json;charset=UTF-8"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (capability != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "capability", capability)); // query parameter
            if (institutionId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "institutionId", institutionId)); // query parameter
            if (name != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "name", name)); // query parameter
            if (priority != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "priority", priority)); // query parameter
            if (providerId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "providerId", providerId)); // query parameter
            if (skip != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "skip", skip)); // query parameter
            if (top != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "top", top)); // query parameter

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetAllProviders", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<ProviderResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (ProviderResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(ProviderResponse)));
        }

        /// <summary>
        /// Get Provider Details The get provider detail service is used to get detailed information including the login form for a provider.&lt;br&gt;The response is a provider object that includes information such as name of the provider, &lt;br&gt;provider&#x27;s base URL, a list of containers supported by the provider, the login form details of the provider, etc.&lt;br&gt;Only enabled datasets, attributes and containers gets returned in the response.&lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;li&gt;This service supports the localization feature and accepts locale as a header parameter.&lt;li&gt;The capability has been deprecated in the response.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerId">providerId</param>
        /// <returns>ProviderDetailResponse</returns>
        public ProviderDetailResponse GetProvider (long? providerId)
        {
             ApiResponse<ProviderDetailResponse> localVarResponse = GetProviderWithHttpInfo(providerId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// Get Provider Details The get provider detail service is used to get detailed information including the login form for a provider.&lt;br&gt;The response is a provider object that includes information such as name of the provider, &lt;br&gt;provider&#x27;s base URL, a list of containers supported by the provider, the login form details of the provider, etc.&lt;br&gt;Only enabled datasets, attributes and containers gets returned in the response.&lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;li&gt;This service supports the localization feature and accepts locale as a header parameter.&lt;li&gt;The capability has been deprecated in the response.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerId">providerId</param>
        /// <returns>ApiResponse of ProviderDetailResponse</returns>
        public ApiResponse< ProviderDetailResponse > GetProviderWithHttpInfo (long? providerId)
        {
            // verify the required parameter 'providerId' is set
            if (providerId == null)
                throw new ApiException(400, "Missing required parameter 'providerId' when calling ProvidersApi->GetProvider");

            var localVarPath = "/providers/{providerId}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json;charset=UTF-8"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (providerId != null) localVarPathParams.Add("providerId", this.Configuration.ApiClient.ParameterToString(providerId)); // path parameter

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetProvider", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<ProviderDetailResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (ProviderDetailResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(ProviderDetailResponse)));
        }

        /// <summary>
        /// Get Provider Details The get provider detail service is used to get detailed information including the login form for a provider.&lt;br&gt;The response is a provider object that includes information such as name of the provider, &lt;br&gt;provider&#x27;s base URL, a list of containers supported by the provider, the login form details of the provider, etc.&lt;br&gt;Only enabled datasets, attributes and containers gets returned in the response.&lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;li&gt;This service supports the localization feature and accepts locale as a header parameter.&lt;li&gt;The capability has been deprecated in the response.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerId">providerId</param>
        /// <returns>Task of ProviderDetailResponse</returns>
        public async System.Threading.Tasks.Task<ProviderDetailResponse> GetProviderAsync (long? providerId)
        {
             ApiResponse<ProviderDetailResponse> localVarResponse = await GetProviderAsyncWithHttpInfo(providerId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// Get Provider Details The get provider detail service is used to get detailed information including the login form for a provider.&lt;br&gt;The response is a provider object that includes information such as name of the provider, &lt;br&gt;provider&#x27;s base URL, a list of containers supported by the provider, the login form details of the provider, etc.&lt;br&gt;Only enabled datasets, attributes and containers gets returned in the response.&lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;li&gt;This service supports the localization feature and accepts locale as a header parameter.&lt;li&gt;The capability has been deprecated in the response.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="providerId">providerId</param>
        /// <returns>Task of ApiResponse (ProviderDetailResponse)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<ProviderDetailResponse>> GetProviderAsyncWithHttpInfo (long? providerId)
        {
            // verify the required parameter 'providerId' is set
            if (providerId == null)
                throw new ApiException(400, "Missing required parameter 'providerId' when calling ProvidersApi->GetProvider");

            var localVarPath = "/providers/{providerId}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json;charset=UTF-8"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (providerId != null) localVarPathParams.Add("providerId", this.Configuration.ApiClient.ParameterToString(providerId)); // path parameter

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetProvider", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<ProviderDetailResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (ProviderDetailResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(ProviderDetailResponse)));
        }

        /// <summary>
        /// Get Providers Count &lt;i&gt;This API implementation notes is intended for FastLink 4 users. For FastLink 3 users, additional integration notes related to this endpoint is available &lt;a href&#x3D;\&quot;https://developer.envestnet.com/resources/yodlee/fastlink-3/docs/api-integrations\&quot;&gt;here&lt;/a&gt;.&lt;/i&gt;&lt;br&gt;&lt;br&gt;The count service provides the total number of providers that get returned in the GET /providers depending on the input parameters passed.&lt;br&gt;If you are implementing pagination for providers, call this endpoint before calling GET /providers to know the number of providers that are returned for the input parameters passed.&lt;br&gt;The functionality of the input parameters remains the same as that of the GET /providers endpoint&lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt; &lt;li&gt;The capability has been deprecated in the query parameter.&lt;/li&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="capability">CHALLENGE_DEPOSIT_VERIFICATION - capability search is deprecated (optional)</param>
        /// <param name="name">Name in minimum 1 character or routing number. (optional)</param>
        /// <param name="priority">Search priority (optional)</param>
        /// <returns>ProvidersCountResponse</returns>
        public ProvidersCountResponse GetProvidersCount (string capability = null, string name = null, string priority = null)
        {
             ApiResponse<ProvidersCountResponse> localVarResponse = GetProvidersCountWithHttpInfo(capability, name, priority);
             return localVarResponse.Data;
        }

        /// <summary>
        /// Get Providers Count &lt;i&gt;This API implementation notes is intended for FastLink 4 users. For FastLink 3 users, additional integration notes related to this endpoint is available &lt;a href&#x3D;\&quot;https://developer.envestnet.com/resources/yodlee/fastlink-3/docs/api-integrations\&quot;&gt;here&lt;/a&gt;.&lt;/i&gt;&lt;br&gt;&lt;br&gt;The count service provides the total number of providers that get returned in the GET /providers depending on the input parameters passed.&lt;br&gt;If you are implementing pagination for providers, call this endpoint before calling GET /providers to know the number of providers that are returned for the input parameters passed.&lt;br&gt;The functionality of the input parameters remains the same as that of the GET /providers endpoint&lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt; &lt;li&gt;The capability has been deprecated in the query parameter.&lt;/li&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="capability">CHALLENGE_DEPOSIT_VERIFICATION - capability search is deprecated (optional)</param>
        /// <param name="name">Name in minimum 1 character or routing number. (optional)</param>
        /// <param name="priority">Search priority (optional)</param>
        /// <returns>ApiResponse of ProvidersCountResponse</returns>
        public ApiResponse< ProvidersCountResponse > GetProvidersCountWithHttpInfo (string capability = null, string name = null, string priority = null)
        {

            var localVarPath = "/providers/count";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json;charset=UTF-8"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (capability != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "capability", capability)); // query parameter
            if (name != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "name", name)); // query parameter
            if (priority != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "priority", priority)); // query parameter

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetProvidersCount", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<ProvidersCountResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (ProvidersCountResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(ProvidersCountResponse)));
        }

        /// <summary>
        /// Get Providers Count &lt;i&gt;This API implementation notes is intended for FastLink 4 users. For FastLink 3 users, additional integration notes related to this endpoint is available &lt;a href&#x3D;\&quot;https://developer.envestnet.com/resources/yodlee/fastlink-3/docs/api-integrations\&quot;&gt;here&lt;/a&gt;.&lt;/i&gt;&lt;br&gt;&lt;br&gt;The count service provides the total number of providers that get returned in the GET /providers depending on the input parameters passed.&lt;br&gt;If you are implementing pagination for providers, call this endpoint before calling GET /providers to know the number of providers that are returned for the input parameters passed.&lt;br&gt;The functionality of the input parameters remains the same as that of the GET /providers endpoint&lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt; &lt;li&gt;The capability has been deprecated in the query parameter.&lt;/li&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="capability">CHALLENGE_DEPOSIT_VERIFICATION - capability search is deprecated (optional)</param>
        /// <param name="name">Name in minimum 1 character or routing number. (optional)</param>
        /// <param name="priority">Search priority (optional)</param>
        /// <returns>Task of ProvidersCountResponse</returns>
        public async System.Threading.Tasks.Task<ProvidersCountResponse> GetProvidersCountAsync (string capability = null, string name = null, string priority = null)
        {
             ApiResponse<ProvidersCountResponse> localVarResponse = await GetProvidersCountAsyncWithHttpInfo(capability, name, priority);
             return localVarResponse.Data;

        }

        /// <summary>
        /// Get Providers Count &lt;i&gt;This API implementation notes is intended for FastLink 4 users. For FastLink 3 users, additional integration notes related to this endpoint is available &lt;a href&#x3D;\&quot;https://developer.envestnet.com/resources/yodlee/fastlink-3/docs/api-integrations\&quot;&gt;here&lt;/a&gt;.&lt;/i&gt;&lt;br&gt;&lt;br&gt;The count service provides the total number of providers that get returned in the GET /providers depending on the input parameters passed.&lt;br&gt;If you are implementing pagination for providers, call this endpoint before calling GET /providers to know the number of providers that are returned for the input parameters passed.&lt;br&gt;The functionality of the input parameters remains the same as that of the GET /providers endpoint&lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt; &lt;li&gt;The capability has been deprecated in the query parameter.&lt;/li&gt;
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="capability">CHALLENGE_DEPOSIT_VERIFICATION - capability search is deprecated (optional)</param>
        /// <param name="name">Name in minimum 1 character or routing number. (optional)</param>
        /// <param name="priority">Search priority (optional)</param>
        /// <returns>Task of ApiResponse (ProvidersCountResponse)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<ProvidersCountResponse>> GetProvidersCountAsyncWithHttpInfo (string capability = null, string name = null, string priority = null)
        {

            var localVarPath = "/providers/count";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json;charset=UTF-8"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (capability != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "capability", capability)); // query parameter
            if (name != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "name", name)); // query parameter
            if (priority != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "priority", priority)); // query parameter

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetProvidersCount", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<ProvidersCountResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (ProvidersCountResponse) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(ProvidersCountResponse)));
        }

    }
}
