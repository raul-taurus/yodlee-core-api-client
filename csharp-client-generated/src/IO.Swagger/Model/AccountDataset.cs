/* 
 * Yodlee Core APIs
 *
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. You can generate a client SDK for Python, Java, JavaScript, PHP, or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.envestnet.com/resources/yodlee/yodlee-api-overview/docs\">Yodlee API v1.1 - Overview</a>.<br><br>You will have to set the header before making the API call. The following headers apply to all the APIs:<ul><li>Authorization: This header holds the access token</li> <li> Api-Version: 1.1</li></ul><b>Note</b>: If there are any API-specific headers, they are mentioned explicitly in the respective API's description.
 *
 * OpenAPI spec version: 1.1.0
 * Contact: developer@yodlee.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;
namespace IO.Swagger.Model
{
    /// <summary>
    /// AccountDataset
    /// </summary>
    [DataContract]
        public partial class AccountDataset :  IEquatable<AccountDataset>, IValidatableObject
    {
        /// <summary>
        /// Indicate whether the dataset is eligible for update or not.&lt;br&gt;&lt;br&gt;&lt;b&gt;Account Type&lt;/b&gt;: Aggregated&lt;br&gt;&lt;b&gt;Endpoints&lt;/b&gt;:&lt;ul&gt;&lt;li&gt;GET accounts&lt;/li&gt;&lt;li&gt;GET accounts/{accountId}&lt;/li&gt;&lt;li&gt;GET providerAccounts&lt;/li&gt;&lt;li&gt;POST providerAccounts&lt;/li&gt;&lt;li&gt;PUT providerAccounts/{providerAccountId}&lt;/li&gt;&lt;li&gt;GET providerAccounts/{providerAccountId}&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;Applicable Values&lt;/b&gt;&lt;br&gt;
        /// </summary>
        /// <value>Indicate whether the dataset is eligible for update or not.&lt;br&gt;&lt;br&gt;&lt;b&gt;Account Type&lt;/b&gt;: Aggregated&lt;br&gt;&lt;b&gt;Endpoints&lt;/b&gt;:&lt;ul&gt;&lt;li&gt;GET accounts&lt;/li&gt;&lt;li&gt;GET accounts/{accountId}&lt;/li&gt;&lt;li&gt;GET providerAccounts&lt;/li&gt;&lt;li&gt;POST providerAccounts&lt;/li&gt;&lt;li&gt;PUT providerAccounts/{providerAccountId}&lt;/li&gt;&lt;li&gt;GET providerAccounts/{providerAccountId}&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;Applicable Values&lt;/b&gt;&lt;br&gt;</value>
        [JsonConverter(typeof(StringEnumConverter))]
                public enum UpdateEligibilityEnum
        {
            /// <summary>
            /// Enum ALLOWUPDATE for value: ALLOW_UPDATE
            /// </summary>
            [EnumMember(Value = "ALLOW_UPDATE")]
            ALLOWUPDATE = 1,
            /// <summary>
            /// Enum ALLOWUPDATEWITHCREDENTIALS for value: ALLOW_UPDATE_WITH_CREDENTIALS
            /// </summary>
            [EnumMember(Value = "ALLOW_UPDATE_WITH_CREDENTIALS")]
            ALLOWUPDATEWITHCREDENTIALS = 2,
            /// <summary>
            /// Enum DISALLOWUPDATE for value: DISALLOW_UPDATE
            /// </summary>
            [EnumMember(Value = "DISALLOW_UPDATE")]
            DISALLOWUPDATE = 3        }
        /// <summary>
        /// Indicate whether the dataset is eligible for update or not.&lt;br&gt;&lt;br&gt;&lt;b&gt;Account Type&lt;/b&gt;: Aggregated&lt;br&gt;&lt;b&gt;Endpoints&lt;/b&gt;:&lt;ul&gt;&lt;li&gt;GET accounts&lt;/li&gt;&lt;li&gt;GET accounts/{accountId}&lt;/li&gt;&lt;li&gt;GET providerAccounts&lt;/li&gt;&lt;li&gt;POST providerAccounts&lt;/li&gt;&lt;li&gt;PUT providerAccounts/{providerAccountId}&lt;/li&gt;&lt;li&gt;GET providerAccounts/{providerAccountId}&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;Applicable Values&lt;/b&gt;&lt;br&gt;
        /// </summary>
        /// <value>Indicate whether the dataset is eligible for update or not.&lt;br&gt;&lt;br&gt;&lt;b&gt;Account Type&lt;/b&gt;: Aggregated&lt;br&gt;&lt;b&gt;Endpoints&lt;/b&gt;:&lt;ul&gt;&lt;li&gt;GET accounts&lt;/li&gt;&lt;li&gt;GET accounts/{accountId}&lt;/li&gt;&lt;li&gt;GET providerAccounts&lt;/li&gt;&lt;li&gt;POST providerAccounts&lt;/li&gt;&lt;li&gt;PUT providerAccounts/{providerAccountId}&lt;/li&gt;&lt;li&gt;GET providerAccounts/{providerAccountId}&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;Applicable Values&lt;/b&gt;&lt;br&gt;</value>
        [DataMember(Name="updateEligibility", EmitDefaultValue=false)]
        public UpdateEligibilityEnum? UpdateEligibility { get; set; }
        /// <summary>
        /// The status of last update attempted for the dataset. &lt;br&gt;&lt;br&gt;&lt;b&gt;Account Type&lt;/b&gt;: Aggregated&lt;br&gt;&lt;b&gt;Endpoints&lt;/b&gt;:&lt;ul&gt;&lt;li&gt;GET accounts&lt;/li&gt;&lt;li&gt;GET accounts/{accountId}&lt;/li&gt;&lt;li&gt;GET providerAccounts&lt;/li&gt;&lt;li&gt;POST providerAccounts&lt;/li&gt;&lt;li&gt;PUT providerAccounts/{providerAccountId}&lt;/li&gt;&lt;li&gt;GET providerAccounts/{providerAccountId}&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;Applicable Values&lt;/b&gt;&lt;br&gt;
        /// </summary>
        /// <value>The status of last update attempted for the dataset. &lt;br&gt;&lt;br&gt;&lt;b&gt;Account Type&lt;/b&gt;: Aggregated&lt;br&gt;&lt;b&gt;Endpoints&lt;/b&gt;:&lt;ul&gt;&lt;li&gt;GET accounts&lt;/li&gt;&lt;li&gt;GET accounts/{accountId}&lt;/li&gt;&lt;li&gt;GET providerAccounts&lt;/li&gt;&lt;li&gt;POST providerAccounts&lt;/li&gt;&lt;li&gt;PUT providerAccounts/{providerAccountId}&lt;/li&gt;&lt;li&gt;GET providerAccounts/{providerAccountId}&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;Applicable Values&lt;/b&gt;&lt;br&gt;</value>
        [JsonConverter(typeof(StringEnumConverter))]
                public enum AdditionalStatusEnum
        {
            /// <summary>
            /// Enum LOGININPROGRESS for value: LOGIN_IN_PROGRESS
            /// </summary>
            [EnumMember(Value = "LOGIN_IN_PROGRESS")]
            LOGININPROGRESS = 1,
            /// <summary>
            /// Enum DATARETRIEVALINPROGRESS for value: DATA_RETRIEVAL_IN_PROGRESS
            /// </summary>
            [EnumMember(Value = "DATA_RETRIEVAL_IN_PROGRESS")]
            DATARETRIEVALINPROGRESS = 2,
            /// <summary>
            /// Enum ACCTSUMMARYRECEIVED for value: ACCT_SUMMARY_RECEIVED
            /// </summary>
            [EnumMember(Value = "ACCT_SUMMARY_RECEIVED")]
            ACCTSUMMARYRECEIVED = 3,
            /// <summary>
            /// Enum AVAILABLEDATARETRIEVED for value: AVAILABLE_DATA_RETRIEVED
            /// </summary>
            [EnumMember(Value = "AVAILABLE_DATA_RETRIEVED")]
            AVAILABLEDATARETRIEVED = 4,
            /// <summary>
            /// Enum PARTIALDATARETRIEVED for value: PARTIAL_DATA_RETRIEVED
            /// </summary>
            [EnumMember(Value = "PARTIAL_DATA_RETRIEVED")]
            PARTIALDATARETRIEVED = 5,
            /// <summary>
            /// Enum DATARETRIEVALFAILED for value: DATA_RETRIEVAL_FAILED
            /// </summary>
            [EnumMember(Value = "DATA_RETRIEVAL_FAILED")]
            DATARETRIEVALFAILED = 6,
            /// <summary>
            /// Enum DATANOTAVAILABLE for value: DATA_NOT_AVAILABLE
            /// </summary>
            [EnumMember(Value = "DATA_NOT_AVAILABLE")]
            DATANOTAVAILABLE = 7,
            /// <summary>
            /// Enum ACCOUNTLOCKED for value: ACCOUNT_LOCKED
            /// </summary>
            [EnumMember(Value = "ACCOUNT_LOCKED")]
            ACCOUNTLOCKED = 8,
            /// <summary>
            /// Enum ADDLAUTHENTICATIONREQUIRED for value: ADDL_AUTHENTICATION_REQUIRED
            /// </summary>
            [EnumMember(Value = "ADDL_AUTHENTICATION_REQUIRED")]
            ADDLAUTHENTICATIONREQUIRED = 9,
            /// <summary>
            /// Enum BETASITEDEVINPROGRESS for value: BETA_SITE_DEV_IN_PROGRESS
            /// </summary>
            [EnumMember(Value = "BETA_SITE_DEV_IN_PROGRESS")]
            BETASITEDEVINPROGRESS = 10,
            /// <summary>
            /// Enum CREDENTIALSUPDATENEEDED for value: CREDENTIALS_UPDATE_NEEDED
            /// </summary>
            [EnumMember(Value = "CREDENTIALS_UPDATE_NEEDED")]
            CREDENTIALSUPDATENEEDED = 11,
            /// <summary>
            /// Enum INCORRECTCREDENTIALS for value: INCORRECT_CREDENTIALS
            /// </summary>
            [EnumMember(Value = "INCORRECT_CREDENTIALS")]
            INCORRECTCREDENTIALS = 12,
            /// <summary>
            /// Enum PROPERTYVALUENOTAVAILABLE for value: PROPERTY_VALUE_NOT_AVAILABLE
            /// </summary>
            [EnumMember(Value = "PROPERTY_VALUE_NOT_AVAILABLE")]
            PROPERTYVALUENOTAVAILABLE = 13,
            /// <summary>
            /// Enum INVALIDADDLINFOPROVIDED for value: INVALID_ADDL_INFO_PROVIDED
            /// </summary>
            [EnumMember(Value = "INVALID_ADDL_INFO_PROVIDED")]
            INVALIDADDLINFOPROVIDED = 14,
            /// <summary>
            /// Enum REQUESTTIMEOUT for value: REQUEST_TIME_OUT
            /// </summary>
            [EnumMember(Value = "REQUEST_TIME_OUT")]
            REQUESTTIMEOUT = 15,
            /// <summary>
            /// Enum SITEBLOCKINGERROR for value: SITE_BLOCKING_ERROR
            /// </summary>
            [EnumMember(Value = "SITE_BLOCKING_ERROR")]
            SITEBLOCKINGERROR = 16,
            /// <summary>
            /// Enum UNEXPECTEDSITEERROR for value: UNEXPECTED_SITE_ERROR
            /// </summary>
            [EnumMember(Value = "UNEXPECTED_SITE_ERROR")]
            UNEXPECTEDSITEERROR = 17,
            /// <summary>
            /// Enum SITENOTSUPPORTED for value: SITE_NOT_SUPPORTED
            /// </summary>
            [EnumMember(Value = "SITE_NOT_SUPPORTED")]
            SITENOTSUPPORTED = 18,
            /// <summary>
            /// Enum SITEUNAVAILABLE for value: SITE_UNAVAILABLE
            /// </summary>
            [EnumMember(Value = "SITE_UNAVAILABLE")]
            SITEUNAVAILABLE = 19,
            /// <summary>
            /// Enum TECHERROR for value: TECH_ERROR
            /// </summary>
            [EnumMember(Value = "TECH_ERROR")]
            TECHERROR = 20,
            /// <summary>
            /// Enum USERACTIONNEEDEDATSITE for value: USER_ACTION_NEEDED_AT_SITE
            /// </summary>
            [EnumMember(Value = "USER_ACTION_NEEDED_AT_SITE")]
            USERACTIONNEEDEDATSITE = 21,
            /// <summary>
            /// Enum SITESESSIONINVALIDATED for value: SITE_SESSION_INVALIDATED
            /// </summary>
            [EnumMember(Value = "SITE_SESSION_INVALIDATED")]
            SITESESSIONINVALIDATED = 22,
            /// <summary>
            /// Enum NEWAUTHENTICATIONREQUIRED for value: NEW_AUTHENTICATION_REQUIRED
            /// </summary>
            [EnumMember(Value = "NEW_AUTHENTICATION_REQUIRED")]
            NEWAUTHENTICATIONREQUIRED = 23,
            /// <summary>
            /// Enum DATASETNOTSUPPORTED for value: DATASET_NOT_SUPPORTED
            /// </summary>
            [EnumMember(Value = "DATASET_NOT_SUPPORTED")]
            DATASETNOTSUPPORTED = 24,
            /// <summary>
            /// Enum ENROLLMENTREQUIREDFORDATASET for value: ENROLLMENT_REQUIRED_FOR_DATASET
            /// </summary>
            [EnumMember(Value = "ENROLLMENT_REQUIRED_FOR_DATASET")]
            ENROLLMENTREQUIREDFORDATASET = 25,
            /// <summary>
            /// Enum CONSENTREQUIRED for value: CONSENT_REQUIRED
            /// </summary>
            [EnumMember(Value = "CONSENT_REQUIRED")]
            CONSENTREQUIRED = 26,
            /// <summary>
            /// Enum CONSENTEXPIRED for value: CONSENT_EXPIRED
            /// </summary>
            [EnumMember(Value = "CONSENT_EXPIRED")]
            CONSENTEXPIRED = 27,
            /// <summary>
            /// Enum CONSENTREVOKED for value: CONSENT_REVOKED
            /// </summary>
            [EnumMember(Value = "CONSENT_REVOKED")]
            CONSENTREVOKED = 28,
            /// <summary>
            /// Enum INCORRECTOAUTHTOKEN for value: INCORRECT_OAUTH_TOKEN
            /// </summary>
            [EnumMember(Value = "INCORRECT_OAUTH_TOKEN")]
            INCORRECTOAUTHTOKEN = 29,
            /// <summary>
            /// Enum MIGRATIONINPROGRESS for value: MIGRATION_IN_PROGRESS
            /// </summary>
            [EnumMember(Value = "MIGRATION_IN_PROGRESS")]
            MIGRATIONINPROGRESS = 30        }
        /// <summary>
        /// The status of last update attempted for the dataset. &lt;br&gt;&lt;br&gt;&lt;b&gt;Account Type&lt;/b&gt;: Aggregated&lt;br&gt;&lt;b&gt;Endpoints&lt;/b&gt;:&lt;ul&gt;&lt;li&gt;GET accounts&lt;/li&gt;&lt;li&gt;GET accounts/{accountId}&lt;/li&gt;&lt;li&gt;GET providerAccounts&lt;/li&gt;&lt;li&gt;POST providerAccounts&lt;/li&gt;&lt;li&gt;PUT providerAccounts/{providerAccountId}&lt;/li&gt;&lt;li&gt;GET providerAccounts/{providerAccountId}&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;Applicable Values&lt;/b&gt;&lt;br&gt;
        /// </summary>
        /// <value>The status of last update attempted for the dataset. &lt;br&gt;&lt;br&gt;&lt;b&gt;Account Type&lt;/b&gt;: Aggregated&lt;br&gt;&lt;b&gt;Endpoints&lt;/b&gt;:&lt;ul&gt;&lt;li&gt;GET accounts&lt;/li&gt;&lt;li&gt;GET accounts/{accountId}&lt;/li&gt;&lt;li&gt;GET providerAccounts&lt;/li&gt;&lt;li&gt;POST providerAccounts&lt;/li&gt;&lt;li&gt;PUT providerAccounts/{providerAccountId}&lt;/li&gt;&lt;li&gt;GET providerAccounts/{providerAccountId}&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;Applicable Values&lt;/b&gt;&lt;br&gt;</value>
        [DataMember(Name="additionalStatus", EmitDefaultValue=false)]
        public AdditionalStatusEnum? AdditionalStatus { get; set; }
        /// <summary>
        /// The name of the dataset requested from the provider site&lt;br&gt;&lt;br&gt;&lt;b&gt;Account Type&lt;/b&gt;: Manual&lt;br&gt;&lt;b&gt;Endpoints&lt;/b&gt;:&lt;ul&gt;&lt;li&gt;GET accounts&lt;/li&gt;&lt;li&gt;GET accounts/{accountId}&lt;/li&gt;&lt;li&gt;GET providerAccounts&lt;/li&gt;&lt;li&gt;POST providerAccounts&lt;/li&gt;&lt;li&gt;PUT providerAccounts/{providerAccountId}&lt;/li&gt;&lt;li&gt;GET providerAccounts/{providerAccountId}&lt;/li&gt;&lt;li&gt;GET providers/{providerId}&lt;/li&gt;&lt;li&gt;GET providers&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;Applicable Values&lt;/b&gt;&lt;br&gt;
        /// </summary>
        /// <value>The name of the dataset requested from the provider site&lt;br&gt;&lt;br&gt;&lt;b&gt;Account Type&lt;/b&gt;: Manual&lt;br&gt;&lt;b&gt;Endpoints&lt;/b&gt;:&lt;ul&gt;&lt;li&gt;GET accounts&lt;/li&gt;&lt;li&gt;GET accounts/{accountId}&lt;/li&gt;&lt;li&gt;GET providerAccounts&lt;/li&gt;&lt;li&gt;POST providerAccounts&lt;/li&gt;&lt;li&gt;PUT providerAccounts/{providerAccountId}&lt;/li&gt;&lt;li&gt;GET providerAccounts/{providerAccountId}&lt;/li&gt;&lt;li&gt;GET providers/{providerId}&lt;/li&gt;&lt;li&gt;GET providers&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;Applicable Values&lt;/b&gt;&lt;br&gt;</value>
        [JsonConverter(typeof(StringEnumConverter))]
                public enum NameEnum
        {
            /// <summary>
            /// Enum BASICAGGDATA for value: BASIC_AGG_DATA
            /// </summary>
            [EnumMember(Value = "BASIC_AGG_DATA")]
            BASICAGGDATA = 1,
            /// <summary>
            /// Enum ADVANCEAGGDATA for value: ADVANCE_AGG_DATA
            /// </summary>
            [EnumMember(Value = "ADVANCE_AGG_DATA")]
            ADVANCEAGGDATA = 2,
            /// <summary>
            /// Enum ACCTPROFILE for value: ACCT_PROFILE
            /// </summary>
            [EnumMember(Value = "ACCT_PROFILE")]
            ACCTPROFILE = 3,
            /// <summary>
            /// Enum DOCUMENT for value: DOCUMENT
            /// </summary>
            [EnumMember(Value = "DOCUMENT")]
            DOCUMENT = 4        }
        /// <summary>
        /// The name of the dataset requested from the provider site&lt;br&gt;&lt;br&gt;&lt;b&gt;Account Type&lt;/b&gt;: Manual&lt;br&gt;&lt;b&gt;Endpoints&lt;/b&gt;:&lt;ul&gt;&lt;li&gt;GET accounts&lt;/li&gt;&lt;li&gt;GET accounts/{accountId}&lt;/li&gt;&lt;li&gt;GET providerAccounts&lt;/li&gt;&lt;li&gt;POST providerAccounts&lt;/li&gt;&lt;li&gt;PUT providerAccounts/{providerAccountId}&lt;/li&gt;&lt;li&gt;GET providerAccounts/{providerAccountId}&lt;/li&gt;&lt;li&gt;GET providers/{providerId}&lt;/li&gt;&lt;li&gt;GET providers&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;Applicable Values&lt;/b&gt;&lt;br&gt;
        /// </summary>
        /// <value>The name of the dataset requested from the provider site&lt;br&gt;&lt;br&gt;&lt;b&gt;Account Type&lt;/b&gt;: Manual&lt;br&gt;&lt;b&gt;Endpoints&lt;/b&gt;:&lt;ul&gt;&lt;li&gt;GET accounts&lt;/li&gt;&lt;li&gt;GET accounts/{accountId}&lt;/li&gt;&lt;li&gt;GET providerAccounts&lt;/li&gt;&lt;li&gt;POST providerAccounts&lt;/li&gt;&lt;li&gt;PUT providerAccounts/{providerAccountId}&lt;/li&gt;&lt;li&gt;GET providerAccounts/{providerAccountId}&lt;/li&gt;&lt;li&gt;GET providers/{providerId}&lt;/li&gt;&lt;li&gt;GET providers&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;Applicable Values&lt;/b&gt;&lt;br&gt;</value>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public NameEnum? Name { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="AccountDataset" /> class.
        /// </summary>
        /// <param name="name">The name of the dataset requested from the provider site&lt;br&gt;&lt;br&gt;&lt;b&gt;Account Type&lt;/b&gt;: Manual&lt;br&gt;&lt;b&gt;Endpoints&lt;/b&gt;:&lt;ul&gt;&lt;li&gt;GET accounts&lt;/li&gt;&lt;li&gt;GET accounts/{accountId}&lt;/li&gt;&lt;li&gt;GET providerAccounts&lt;/li&gt;&lt;li&gt;POST providerAccounts&lt;/li&gt;&lt;li&gt;PUT providerAccounts/{providerAccountId}&lt;/li&gt;&lt;li&gt;GET providerAccounts/{providerAccountId}&lt;/li&gt;&lt;li&gt;GET providers/{providerId}&lt;/li&gt;&lt;li&gt;GET providers&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;Applicable Values&lt;/b&gt;&lt;br&gt;.</param>
        public AccountDataset(NameEnum? name = default(NameEnum?))
        {
            this.Name = name;
        }
        
        /// <summary>
        /// Indicate when the dataset is last updated successfully for the given provider account.&lt;br&gt;&lt;br&gt;&lt;b&gt;Account Type&lt;/b&gt;: Aggregated&lt;br&gt;&lt;b&gt;Endpoints&lt;/b&gt;:&lt;ul&gt;&lt;li&gt;GET accounts&lt;/li&gt;&lt;li&gt;GET accounts/{accountId}&lt;/li&gt;&lt;li&gt;GET providerAccounts&lt;/li&gt;&lt;li&gt;POST providerAccounts&lt;/li&gt;&lt;li&gt;PUT providerAccounts/{providerAccountId}&lt;/li&gt;&lt;li&gt;GET providerAccounts/{providerAccountId}&lt;/li&gt;&lt;/ul&gt;
        /// </summary>
        /// <value>Indicate when the dataset is last updated successfully for the given provider account.&lt;br&gt;&lt;br&gt;&lt;b&gt;Account Type&lt;/b&gt;: Aggregated&lt;br&gt;&lt;b&gt;Endpoints&lt;/b&gt;:&lt;ul&gt;&lt;li&gt;GET accounts&lt;/li&gt;&lt;li&gt;GET accounts/{accountId}&lt;/li&gt;&lt;li&gt;GET providerAccounts&lt;/li&gt;&lt;li&gt;POST providerAccounts&lt;/li&gt;&lt;li&gt;PUT providerAccounts/{providerAccountId}&lt;/li&gt;&lt;li&gt;GET providerAccounts/{providerAccountId}&lt;/li&gt;&lt;/ul&gt;</value>
        [DataMember(Name="lastUpdated", EmitDefaultValue=false)]
        public string LastUpdated { get; private set; }



        /// <summary>
        /// Indicates when the next attempt to update the dataset is scheduled.&lt;br&gt;&lt;br&gt;&lt;b&gt;Account Type&lt;/b&gt;: Aggregated&lt;br&gt;&lt;b&gt;Endpoints&lt;/b&gt;:&lt;ul&gt;&lt;li&gt;GET accounts&lt;/li&gt;&lt;li&gt;GET accounts/{accountId}&lt;/li&gt;&lt;li&gt;GET providerAccounts&lt;/li&gt;&lt;li&gt;POST providerAccounts&lt;/li&gt;&lt;li&gt;PUT providerAccounts/{providerAccountId}&lt;/li&gt;&lt;li&gt;GET providerAccounts/{providerAccountId}&lt;/li&gt;&lt;/ul&gt;
        /// </summary>
        /// <value>Indicates when the next attempt to update the dataset is scheduled.&lt;br&gt;&lt;br&gt;&lt;b&gt;Account Type&lt;/b&gt;: Aggregated&lt;br&gt;&lt;b&gt;Endpoints&lt;/b&gt;:&lt;ul&gt;&lt;li&gt;GET accounts&lt;/li&gt;&lt;li&gt;GET accounts/{accountId}&lt;/li&gt;&lt;li&gt;GET providerAccounts&lt;/li&gt;&lt;li&gt;POST providerAccounts&lt;/li&gt;&lt;li&gt;PUT providerAccounts/{providerAccountId}&lt;/li&gt;&lt;li&gt;GET providerAccounts/{providerAccountId}&lt;/li&gt;&lt;/ul&gt;</value>
        [DataMember(Name="nextUpdateScheduled", EmitDefaultValue=false)]
        public string NextUpdateScheduled { get; private set; }


        /// <summary>
        /// Indicate when the last attempt was performed to update the dataset for the given provider account&lt;br&gt;&lt;br&gt;&lt;b&gt;Account Type&lt;/b&gt;: Aggregated&lt;br&gt;&lt;b&gt;Endpoints&lt;/b&gt;:&lt;ul&gt;&lt;li&gt;GET accounts&lt;/li&gt;&lt;li&gt;GET accounts/{accountId}&lt;/li&gt;&lt;li&gt;GET providerAccounts&lt;/li&gt;&lt;li&gt;POST providerAccounts&lt;/li&gt;&lt;li&gt;PUT providerAccounts/{providerAccountId}&lt;/li&gt;&lt;li&gt;GET providerAccounts/{providerAccountId}&lt;/li&gt;&lt;/ul&gt;
        /// </summary>
        /// <value>Indicate when the last attempt was performed to update the dataset for the given provider account&lt;br&gt;&lt;br&gt;&lt;b&gt;Account Type&lt;/b&gt;: Aggregated&lt;br&gt;&lt;b&gt;Endpoints&lt;/b&gt;:&lt;ul&gt;&lt;li&gt;GET accounts&lt;/li&gt;&lt;li&gt;GET accounts/{accountId}&lt;/li&gt;&lt;li&gt;GET providerAccounts&lt;/li&gt;&lt;li&gt;POST providerAccounts&lt;/li&gt;&lt;li&gt;PUT providerAccounts/{providerAccountId}&lt;/li&gt;&lt;li&gt;GET providerAccounts/{providerAccountId}&lt;/li&gt;&lt;/ul&gt;</value>
        [DataMember(Name="lastUpdateAttempt", EmitDefaultValue=false)]
        public string LastUpdateAttempt { get; private set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AccountDataset {\n");
            sb.Append("  LastUpdated: ").Append(LastUpdated).Append("\n");
            sb.Append("  UpdateEligibility: ").Append(UpdateEligibility).Append("\n");
            sb.Append("  AdditionalStatus: ").Append(AdditionalStatus).Append("\n");
            sb.Append("  NextUpdateScheduled: ").Append(NextUpdateScheduled).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  LastUpdateAttempt: ").Append(LastUpdateAttempt).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AccountDataset);
        }

        /// <summary>
        /// Returns true if AccountDataset instances are equal
        /// </summary>
        /// <param name="input">Instance of AccountDataset to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AccountDataset input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.LastUpdated == input.LastUpdated ||
                    (this.LastUpdated != null &&
                    this.LastUpdated.Equals(input.LastUpdated))
                ) && 
                (
                    this.UpdateEligibility == input.UpdateEligibility ||
                    (this.UpdateEligibility != null &&
                    this.UpdateEligibility.Equals(input.UpdateEligibility))
                ) && 
                (
                    this.AdditionalStatus == input.AdditionalStatus ||
                    (this.AdditionalStatus != null &&
                    this.AdditionalStatus.Equals(input.AdditionalStatus))
                ) && 
                (
                    this.NextUpdateScheduled == input.NextUpdateScheduled ||
                    (this.NextUpdateScheduled != null &&
                    this.NextUpdateScheduled.Equals(input.NextUpdateScheduled))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.LastUpdateAttempt == input.LastUpdateAttempt ||
                    (this.LastUpdateAttempt != null &&
                    this.LastUpdateAttempt.Equals(input.LastUpdateAttempt))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.LastUpdated != null)
                    hashCode = hashCode * 59 + this.LastUpdated.GetHashCode();
                if (this.UpdateEligibility != null)
                    hashCode = hashCode * 59 + this.UpdateEligibility.GetHashCode();
                if (this.AdditionalStatus != null)
                    hashCode = hashCode * 59 + this.AdditionalStatus.GetHashCode();
                if (this.NextUpdateScheduled != null)
                    hashCode = hashCode * 59 + this.NextUpdateScheduled.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.LastUpdateAttempt != null)
                    hashCode = hashCode * 59 + this.LastUpdateAttempt.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
