/* 
 * Yodlee Core APIs
 *
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. You can generate a client SDK for Python, Java, JavaScript, PHP, or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.envestnet.com/resources/yodlee/yodlee-api-overview/docs\">Yodlee API v1.1 - Overview</a>.<br><br>You will have to set the header before making the API call. The following headers apply to all the APIs:<ul><li>Authorization: This header holds the access token</li> <li> Api-Version: 1.1</li></ul><b>Note</b>: If there are any API-specific headers, they are mentioned explicitly in the respective API's description.
 *
 * OpenAPI spec version: 1.1.0
 * Contact: developer@yodlee.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing DerivedApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class DerivedApiTests
    {
        private DerivedApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new DerivedApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DerivedApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' DerivedApi
            //Assert.IsInstanceOfType(typeof(DerivedApi), instance, "instance is a DerivedApi");
        }

        /// <summary>
        /// Test GetHoldingSummary
        /// </summary>
        [Test]
        public void GetHoldingSummaryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountIds = null;
            //string classificationType = null;
            //string include = null;
            //var response = instance.GetHoldingSummary(accountIds, classificationType, include);
            //Assert.IsInstanceOf<DerivedHoldingSummaryResponse> (response, "response is DerivedHoldingSummaryResponse");
        }
        /// <summary>
        /// Test GetNetworth
        /// </summary>
        [Test]
        public void GetNetworthTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountIds = null;
            //string container = null;
            //string fromDate = null;
            //string include = null;
            //string interval = null;
            //int? skip = null;
            //string toDate = null;
            //int? top = null;
            //var response = instance.GetNetworth(accountIds, container, fromDate, include, interval, skip, toDate, top);
            //Assert.IsInstanceOf<DerivedNetworthResponse> (response, "response is DerivedNetworthResponse");
        }
        /// <summary>
        /// Test GetTransactionSummary
        /// </summary>
        [Test]
        public void GetTransactionSummaryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string groupBy = null;
            //string accountId = null;
            //string categoryId = null;
            //string categoryType = null;
            //string fromDate = null;
            //string include = null;
            //bool? includeUserCategory = null;
            //string interval = null;
            //string toDate = null;
            //var response = instance.GetTransactionSummary(groupBy, accountId, categoryId, categoryType, fromDate, include, includeUserCategory, interval, toDate);
            //Assert.IsInstanceOf<DerivedTransactionSummaryResponse> (response, "response is DerivedTransactionSummaryResponse");
        }
    }

}
