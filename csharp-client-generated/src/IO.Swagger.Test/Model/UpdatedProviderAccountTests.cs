/* 
 * Yodlee Core APIs
 *
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. You can generate a client SDK for Python, Java, JavaScript, PHP, or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.envestnet.com/resources/yodlee/yodlee-api-overview/docs\">Yodlee API v1.1 - Overview</a>.<br><br>You will have to set the header before making the API call. The following headers apply to all the APIs:<ul><li>Authorization: This header holds the access token</li> <li> Api-Version: 1.1</li></ul><b>Note</b>: If there are any API-specific headers, they are mentioned explicitly in the respective API's description.
 *
 * OpenAPI spec version: 1.1.0
 * Contact: developer@yodlee.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing UpdatedProviderAccount
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class UpdatedProviderAccountTests
    {
        // TODO uncomment below to declare an instance variable for UpdatedProviderAccount
        //private UpdatedProviderAccount instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of UpdatedProviderAccount
            //instance = new UpdatedProviderAccount();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of UpdatedProviderAccount
        /// </summary>
        [Test]
        public void UpdatedProviderAccountInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" UpdatedProviderAccount
            //Assert.IsInstanceOfType<UpdatedProviderAccount> (instance, "variable 'instance' is a UpdatedProviderAccount");
        }


        /// <summary>
        /// Test the property 'LastUpdated'
        /// </summary>
        [Test]
        public void LastUpdatedTest()
        {
            // TODO unit test for the property 'LastUpdated'
        }
        /// <summary>
        /// Test the property 'LoginForm'
        /// </summary>
        [Test]
        public void LoginFormTest()
        {
            // TODO unit test for the property 'LoginForm'
        }
        /// <summary>
        /// Test the property 'CreatedDate'
        /// </summary>
        [Test]
        public void CreatedDateTest()
        {
            // TODO unit test for the property 'CreatedDate'
        }
        /// <summary>
        /// Test the property 'AggregationSource'
        /// </summary>
        [Test]
        public void AggregationSourceTest()
        {
            // TODO unit test for the property 'AggregationSource'
        }
        /// <summary>
        /// Test the property 'OauthMigrationStatus'
        /// </summary>
        [Test]
        public void OauthMigrationStatusTest()
        {
            // TODO unit test for the property 'OauthMigrationStatus'
        }
        /// <summary>
        /// Test the property 'ProviderId'
        /// </summary>
        [Test]
        public void ProviderIdTest()
        {
            // TODO unit test for the property 'ProviderId'
        }
        /// <summary>
        /// Test the property 'RequestId'
        /// </summary>
        [Test]
        public void RequestIdTest()
        {
            // TODO unit test for the property 'RequestId'
        }
        /// <summary>
        /// Test the property 'IsManual'
        /// </summary>
        [Test]
        public void IsManualTest()
        {
            // TODO unit test for the property 'IsManual'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Test]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Dataset'
        /// </summary>
        [Test]
        public void DatasetTest()
        {
            // TODO unit test for the property 'Dataset'
        }
        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [Test]
        public void StatusTest()
        {
            // TODO unit test for the property 'Status'
        }

    }

}
