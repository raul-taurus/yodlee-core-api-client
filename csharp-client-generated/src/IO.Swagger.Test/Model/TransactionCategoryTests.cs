/* 
 * Yodlee Core APIs
 *
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. You can generate a client SDK for Python, Java, JavaScript, PHP, or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.envestnet.com/resources/yodlee/yodlee-api-overview/docs\">Yodlee API v1.1 - Overview</a>.<br><br>You will have to set the header before making the API call. The following headers apply to all the APIs:<ul><li>Authorization: This header holds the access token</li> <li> Api-Version: 1.1</li></ul><b>Note</b>: If there are any API-specific headers, they are mentioned explicitly in the respective API's description.
 *
 * OpenAPI spec version: 1.1.0
 * Contact: developer@yodlee.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing TransactionCategory
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class TransactionCategoryTests
    {
        // TODO uncomment below to declare an instance variable for TransactionCategory
        //private TransactionCategory instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of TransactionCategory
            //instance = new TransactionCategory();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of TransactionCategory
        /// </summary>
        [Test]
        public void TransactionCategoryInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" TransactionCategory
            //Assert.IsInstanceOfType<TransactionCategory> (instance, "variable 'instance' is a TransactionCategory");
        }


        /// <summary>
        /// Test the property 'HighLevelCategoryName'
        /// </summary>
        [Test]
        public void HighLevelCategoryNameTest()
        {
            // TODO unit test for the property 'HighLevelCategoryName'
        }
        /// <summary>
        /// Test the property 'DefaultHighLevelCategoryName'
        /// </summary>
        [Test]
        public void DefaultHighLevelCategoryNameTest()
        {
            // TODO unit test for the property 'DefaultHighLevelCategoryName'
        }
        /// <summary>
        /// Test the property 'HighLevelCategoryId'
        /// </summary>
        [Test]
        public void HighLevelCategoryIdTest()
        {
            // TODO unit test for the property 'HighLevelCategoryId'
        }
        /// <summary>
        /// Test the property 'DetailCategory'
        /// </summary>
        [Test]
        public void DetailCategoryTest()
        {
            // TODO unit test for the property 'DetailCategory'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Test]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Source'
        /// </summary>
        [Test]
        public void SourceTest()
        {
            // TODO unit test for the property 'Source'
        }
        /// <summary>
        /// Test the property 'Category'
        /// </summary>
        [Test]
        public void CategoryTest()
        {
            // TODO unit test for the property 'Category'
        }
        /// <summary>
        /// Test the property 'Classification'
        /// </summary>
        [Test]
        public void ClassificationTest()
        {
            // TODO unit test for the property 'Classification'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Test]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
        /// <summary>
        /// Test the property 'DefaultCategoryName'
        /// </summary>
        [Test]
        public void DefaultCategoryNameTest()
        {
            // TODO unit test for the property 'DefaultCategoryName'
        }

    }

}
